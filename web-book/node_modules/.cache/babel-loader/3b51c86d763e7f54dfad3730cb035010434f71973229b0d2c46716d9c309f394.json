{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  name: \"NavBar\",\n  data() {\n    return {\n      bean: [],\n      loading: true\n    };\n  },\n  computed: {\n    // 修正后的处理逻辑\n    processedBooks() {\n      return this.bean.map(category => ({\n        ...category,\n        // 转换书籍数据并过滤无效项\n        books: (category.books || []).map(book => ({\n          ...book,\n          // 处理评分格式\n          mark: book.mark ? Number(book.mark.toFixed(1)) : 0.0\n        }))\n        // 过滤无效书籍（必须有id）\n        .filter(book => book.id && book.status === 1) // 增加status过滤\n      }))\n      // 过滤空分类\n      .filter(category => category.books.length > 0)\n      // 过滤无效分类（必须有id）\n      .filter(category => category.id && category.name);\n    }\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const res = await this.$axios.get(this.$httpUrl + '/book/preview');\n        if (res.data.code === 200) {\n          this.bean = res.data.data || [];\n        } else {\n          this.$message.error('数据加载失败');\n        }\n      } catch (error) {\n        this.$message.error('网络请求异常');\n        console.error('数据加载失败:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleMore(id) {\n      this.$router.push({\n        path: '/category',\n        query: {\n          id: id\n        }\n      });\n    },\n    handleSkip(id) {\n      this.$router.push({\n        path: '/book',\n        query: {\n          id: id\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","bean","loading","computed","processedBooks","map","category","books","book","mark","Number","toFixed","filter","id","status","length","created","fetchData","methods","res","$axios","get","$httpUrl","code","$message","error","console","handleMore","$router","push","path","query","handleSkip"],"sources":["src/user/home/NvaBar.vue"],"sourcesContent":["<template>\r\n  <div v-loading=\"loading\">\r\n    <el-row\r\n        v-for=\"row in processedBooks\"\r\n        :key=\"row.id\"\r\n        style=\"text-align: center;margin-left: 20%;margin-right: 20%\"\r\n        :gutter=\"20\">\r\n\r\n      <el-col>\r\n        <h3>{{row.name}}\r\n          <el-button\r\n              type=\"info\"\r\n              icon=\"el-icon-arrow-right\"\r\n              size=\"mini\"\r\n              @click=\"handleMore(row.id)\"/>\r\n        </h3>\r\n      </el-col>\r\n\r\n      <el-col\r\n          v-for=\"item in row.books\"\r\n          :key=\"item.id\"\r\n          :span=\"6\"\r\n          style=\"margin-bottom: 15px;\">\r\n\r\n        <el-card\r\n            :body-style=\"{padding:'0px'}\"\r\n            style=\"width: 195px; cursor: pointer;\"\r\n            shadow=\"hover\"\r\n            @click.native=\"handleSkip(item.id)\">\r\n\r\n          <el-image\r\n              :src=\"item.image\"\r\n              style=\"height: 276px;width: 195px\"\r\n              fit=\"cover\">\r\n            <div slot=\"error\" class=\"image-placeholder\">\r\n              <i class=\"el-icon-picture-outline\"></i>\r\n            </div>\r\n          </el-image>\r\n\r\n          <div style=\"padding: 10px;\">\r\n            <p class=\"book-title\">{{ item.name }}</p>\r\n            <p class=\"book-author\">{{ item.author }}</p>\r\n\r\n            <!-- 评分显示部分修改 -->\r\n            <div class=\"price-rating\">\r\n              <span class=\"price\">¥{{ item.price }}</span>\r\n              <div class=\"rating-box\">\r\n                评分：{{ item.mark || '暂无' }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n    <!-- 空状态提示 -->\r\n    <el-empty\r\n        v-if=\"!loading && processedBooks.length === 0\"\r\n        description=\"暂无图书数据\"\r\n        style=\"margin-top: 50px\"></el-empty>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"NavBar\",\r\n  data() {\r\n    return {\r\n      bean: [],\r\n      loading: true\r\n    };\r\n  },\r\n  computed: {\r\n    // 修正后的处理逻辑\r\n    processedBooks() {\r\n      return this.bean\r\n          .map(category => ({\r\n            ...category,\r\n            // 转换书籍数据并过滤无效项\r\n            books: (category.books || [])\r\n                .map(book => ({\r\n                  ...book,\r\n                  // 处理评分格式\r\n                  mark: book.mark ? Number(book.mark.toFixed(1)) : 0.0\r\n                }))\r\n                // 过滤无效书籍（必须有id）\r\n                .filter(book => book.id && book.status === 1) // 增加status过滤\r\n          }))\r\n          // 过滤空分类\r\n          .filter(category => category.books.length > 0)\r\n          // 过滤无效分类（必须有id）\r\n          .filter(category => category.id && category.name)\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.fetchData();\r\n  },\r\n\r\n  methods: {\r\n    async fetchData() {\r\n      try {\r\n        const res = await this.$axios.get(this.$httpUrl+'/book/preview');\r\n        if (res.data.code === 200) {\r\n          this.bean = res.data.data || [];\r\n        }\r\n        else {\r\n          this.$message.error('数据加载失败');\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('网络请求异常');\r\n        console.error('数据加载失败:', error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    handleMore(id){\r\n      this.$router.push({\r\n        path: '/category',\r\n        query:{\r\n          id:id\r\n        }\r\n      })\r\n    },\r\n    handleSkip(id){\r\n      this.$router.push({\r\n        path: '/book',\r\n        query:{\r\n          id:id\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 新增评分样式 */\r\n.price-rating {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 8px;\r\n}\r\n\r\n.rating-box {\r\n  background: #f5f7fa;\r\n  border-radius: 4px;\r\n  padding: 2px 6px;\r\n  font-size: 12px;\r\n  color: #606266;\r\n}\r\n\r\n.book-title {\r\n  font-size: 14px;\r\n  margin: 5px 0;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.book-author {\r\n  color: #909399;\r\n  font-size: 12px;\r\n  margin: 5px 0;\r\n}\r\n\r\n.price {\r\n  color: #ff4443;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.image-placeholder {\r\n  height: 276px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f5f7fa;\r\n  color: #c0c4cc;\r\n}\r\n</style>"],"mappings":";;;;AA+DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,eAAA;MACA,YAAAH,IAAA,CACAI,GAAA,CAAAC,QAAA;QACA,GAAAA,QAAA;QACA;QACAC,KAAA,GAAAD,QAAA,CAAAC,KAAA,QACAF,GAAA,CAAAG,IAAA;UACA,GAAAA,IAAA;UACA;UACAC,IAAA,EAAAD,IAAA,CAAAC,IAAA,GAAAC,MAAA,CAAAF,IAAA,CAAAC,IAAA,CAAAE,OAAA;QACA;QACA;QAAA,CACAC,MAAA,CAAAJ,IAAA,IAAAA,IAAA,CAAAK,EAAA,IAAAL,IAAA,CAAAM,MAAA;MACA;MACA;MAAA,CACAF,MAAA,CAAAN,QAAA,IAAAA,QAAA,CAAAC,KAAA,CAAAQ,MAAA;MACA;MAAA,CACAH,MAAA,CAAAN,QAAA,IAAAA,QAAA,CAAAO,EAAA,IAAAP,QAAA,CAAAP,IAAA;IACA;EACA;EAEAiB,QAAA;IACA,KAAAC,SAAA;EACA;EAEAC,OAAA;IACA,MAAAD,UAAA;MACA;QACA,MAAAE,GAAA,cAAAC,MAAA,CAAAC,GAAA,MAAAC,QAAA;QACA,IAAAH,GAAA,CAAAnB,IAAA,CAAAuB,IAAA;UACA,KAAAtB,IAAA,GAAAkB,GAAA,CAAAnB,IAAA,CAAAA,IAAA;QACA,OACA;UACA,KAAAwB,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;MACA;QACA,KAAAvB,OAAA;MACA;IACA;IACAyB,WAAAd,EAAA;MACA,KAAAe,OAAA,CAAAC,IAAA;QACAC,IAAA;QACAC,KAAA;UACAlB,EAAA,EAAAA;QACA;MACA;IACA;IACAmB,WAAAnB,EAAA;MACA,KAAAe,OAAA,CAAAC,IAAA;QACAC,IAAA;QACAC,KAAA;UACAlB,EAAA,EAAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}