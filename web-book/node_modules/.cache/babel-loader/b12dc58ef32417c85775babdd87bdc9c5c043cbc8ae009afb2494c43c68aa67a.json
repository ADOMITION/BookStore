{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  name: \"NavBar\",\n  data() {\n    return {\n      bean: [],\n      loading: true\n    };\n  },\n  computed: {\n    // 添加数据清洗逻辑\n    processedBooks() {\n      return this.bean.map(category => ({\n        ...category,\n        books: (category.books || []).map(book => ({\n          ...book,\n          // 确保评分格式正确\n          mark: book.mark ? book.mark.toFixed(1) : '0.0'\n        }))\n      }));\n    }\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const res = await this.$axios.get('/book/preview');\n        if (res.data.code === 200) {\n          this.bean = res.data.data;\n        }\n      } catch (error) {\n        console.error('数据加载失败:', error);\n      }\n    },\n    handleMore(id) {\n      this.$router.push({\n        path: '/category',\n        query: {\n          id: id\n        }\n      });\n    },\n    handleSkip(id) {\n      this.$router.push({\n        path: '/book',\n        query: {\n          id: id\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","bean","loading","computed","processedBooks","map","category","books","book","mark","toFixed","created","fetchData","methods","res","$axios","get","code","error","console","handleMore","id","$router","push","path","query","handleSkip"],"sources":["src/user/home/NvaBar.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-row\r\n        v-for=\"row in bean\"\r\n        :key=\"row.id\"\r\n        style=\"text-align: center;margin-left: 20%;margin-right: 20%\"\r\n        :gutter=\"20\">\r\n\r\n      <el-col>\r\n        <h3>{{row.name}}\r\n          <el-button\r\n              type=\"info\"\r\n              icon=\"el-icon-arrow-right\"\r\n              size=\"mini\"\r\n              @click=\"handleMore(row.id)\"/>\r\n        </h3>\r\n      </el-col>\r\n\r\n      <el-col\r\n          v-for=\"item in row.books\"\r\n          :key=\"item.id\"\r\n          :span=\"6\"\r\n          style=\"margin-bottom: 15px;\">\r\n\r\n        <el-card\r\n            :body-style=\"{padding:'0px'}\"\r\n            style=\"width: 195px; cursor: pointer;\"\r\n            shadow=\"hover\"\r\n            @click.native=\"handleSkip(item.id)\">\r\n\r\n          <el-image\r\n              :src=\"item.image\"\r\n              style=\"height: 276px;width: 195px\"\r\n              fit=\"cover\">\r\n            <div slot=\"error\" class=\"image-placeholder\">\r\n              <i class=\"el-icon-picture-outline\"></i>\r\n            </div>\r\n          </el-image>\r\n\r\n          <div style=\"padding: 10px;\">\r\n            <p class=\"book-title\">{{ item.name }}</p>\r\n            <p class=\"book-author\">{{ item.author }}</p>\r\n\r\n            <!-- 评分显示部分修改 -->\r\n            <div class=\"price-rating\">\r\n              <span class=\"price\">¥{{ item.price }}</span>\r\n              <div class=\"rating-box\">\r\n                评分：{{ item.mark || '暂无' }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"NavBar\",\r\n  data() {\r\n    return {\r\n      bean: [],\r\n      loading: true\r\n    };\r\n  },\r\n  computed: {\r\n    // 添加数据清洗逻辑\r\n    processedBooks() {\r\n      return this.bean.map(category => ({\r\n        ...category,\r\n        books: (category.books || []).map(book => ({\r\n          ...book,\r\n          // 确保评分格式正确\r\n          mark: book.mark ? book.mark.toFixed(1) : '0.0'\r\n        }))\r\n      }));\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData();\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      try {\r\n        const res = await this.$axios.get('/book/preview');\r\n        if (res.data.code === 200) {\r\n          this.bean = res.data.data;\r\n        }\r\n      } catch (error) {\r\n        console.error('数据加载失败:', error);\r\n      }\r\n    },\r\n    handleMore(id){\r\n      this.$router.push({\r\n        path: '/category',\r\n        query:{\r\n          id:id\r\n        }\r\n      })\r\n    },\r\n    handleSkip(id){\r\n      this.$router.push({\r\n        path: '/book',\r\n        query:{\r\n          id:id\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.rating-container {\r\n  margin: 5px 0;\r\n  transform: scale(0.8); /* 调整评分组件大小 */\r\n}\r\n\r\n/* 调整评分文本样式 */\r\n.el-rate__text {\r\n  font-size: 12px!important;\r\n  color: #ff9900!important;\r\n  margin-left: 5px;\r\n}\r\n</style>"],"mappings":";;;AA0DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,eAAA;MACA,YAAAH,IAAA,CAAAI,GAAA,CAAAC,QAAA;QACA,GAAAA,QAAA;QACAC,KAAA,GAAAD,QAAA,CAAAC,KAAA,QAAAF,GAAA,CAAAG,IAAA;UACA,GAAAA,IAAA;UACA;UACAC,IAAA,EAAAD,IAAA,CAAAC,IAAA,GAAAD,IAAA,CAAAC,IAAA,CAAAC,OAAA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACA,MAAAD,UAAA;MACA;QACA,MAAAE,GAAA,cAAAC,MAAA,CAAAC,GAAA;QACA,IAAAF,GAAA,CAAAd,IAAA,CAAAiB,IAAA;UACA,KAAAhB,IAAA,GAAAa,GAAA,CAAAd,IAAA,CAAAA,IAAA;QACA;MACA,SAAAkB,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;MACA;IACA;IACAE,WAAAC,EAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QACAC,IAAA;QACAC,KAAA;UACAJ,EAAA,EAAAA;QACA;MACA;IACA;IACAK,WAAAL,EAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QACAC,IAAA;QACAC,KAAA;UACAJ,EAAA,EAAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}