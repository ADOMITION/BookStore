{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { formatDate } from '@/store/formatDate';\nexport default {\n  name: 'MyReservation',\n  data() {\n    return {\n      activeStatus: '0',\n      pendingList: [],\n      arrivedList: [],\n      loadingPending: false,\n      loadingArrived: false,\n      pagination: {\n        pageSize: 10,\n        pageNum: 1,\n        total: 0\n      }\n    };\n  },\n  created() {\n    this.loadReservations(0);\n    this.loadReservations(1);\n  },\n  methods: {\n    async loadReservations(status) {\n      const loadingKey = status === 0 ? 'loadingPending' : 'loadingArrived';\n      try {\n        this[loadingKey] = true;\n        const userId = JSON.parse(sessionStorage.getItem('CurUser')).id;\n        const res = await this.$axios.post(this.$httpUrl + '/reservation/listByUser', {\n          pageSize: this.pagination.pageSize,\n          pageNum: this.pagination.pageNum,\n          param: {\n            userId,\n            status\n          }\n        });\n        if (status === 0) {\n          this.pendingList = res.data.data;\n          this.pagination.total = res.data.total;\n        } else {\n          this.arrivedList = res.data.data;\n          this.pagination.total = res.data.total;\n        }\n      } catch (error) {\n        this.$message.error('获取预定记录失败');\n      } finally {\n        this[loadingKey] = false;\n      }\n    },\n    async handleCancel(id) {\n      try {\n        await this.$confirm('确定要执行该操作吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        const res = await this.$axios.post(this.$httpUrl + '/reservation/cancel', {\n          id\n        });\n        if (res.data.code === 200) {\n          this.$message.success('操作成功');\n          this.loadReservations(0);\n          this.loadReservations(1);\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('操作失败');\n        }\n      }\n    },\n    handlePageChange(page) {\n      this.pagination.pageNum = page;\n      this.loadReservations();\n    },\n    handleSkip(id) {\n      this.$router.push({\n        path: '/book',\n        query: {\n          id\n        }\n      });\n    },\n    // 格式化时间显示\n    formatTime(time) {\n      if (!time) return '暂无时间信息';\n      try {\n        // 处理后端返回的时间格式\n        const dateStr = typeof time === 'string' ? time : time.toString();\n        return formatDate(new Date(dateStr), 'yyyy-MM-dd hh:mm:ss');\n      } catch (e) {\n        console.error('时间格式错误:', time);\n        return '时间格式异常';\n      }\n    }\n  }\n};","map":{"version":3,"names":["formatDate","name","data","activeStatus","pendingList","arrivedList","loadingPending","loadingArrived","pagination","pageSize","pageNum","total","created","loadReservations","methods","status","loadingKey","userId","JSON","parse","sessionStorage","getItem","id","res","$axios","post","$httpUrl","param","error","$message","handleCancel","$confirm","confirmButtonText","cancelButtonText","type","code","success","handlePageChange","page","handleSkip","$router","push","path","query","formatTime","time","dateStr","toString","Date","e","console"],"sources":["src/user/MyReservation.vue"],"sourcesContent":["<template>\r\n  <div class=\"reservation-container\">\r\n    <el-card class=\"reservation-card\">\r\n      <el-tabs v-model=\"activeStatus\">\r\n        <!-- 预定中标签页 -->\r\n        <el-tab-pane label=\"预定中\" name=\"0\">\r\n          <div v-loading=\"loadingPending\" class=\"reservation-list\">\r\n            <el-empty\r\n                v-if=\"pendingList.length === 0\"\r\n                description=\"暂无预定中的书籍\"\r\n            ></el-empty>\r\n\r\n            <div\r\n                v-for=\"item in pendingList\"\r\n                :key=\"item.id\"\r\n                class=\"reservation-item\"\r\n            >\r\n              <el-card shadow=\"hover\">\r\n                <el-row :gutter=\"20\">\r\n                  <el-col :span=\"4\">\r\n                    <el-image\r\n                        :src=\"item.bookCover || require('@/assets/default-book.png')\"\r\n                        @click=\"handleSkip(item.bookId)\"\r\n                        class=\"clickable-cover book-cover\"\r\n                        fit=\"contain\"\r\n                    />\r\n                  </el-col>\r\n\r\n                  <el-col :span=\"16\">\r\n                    <div class=\"book-info\">\r\n                      <h3 class=\"book-title\">{{ item.bookName }}</h3>\r\n                      <div class=\"meta-info\">\r\n                        <span class=\"quantity\">预定数量：{{ item.quantity }}</span>\r\n                        <span class=\"create-time\">预定时间：{{ formatTime(item.createTime) }}</span>\r\n                      </div>\r\n                    </div>\r\n                  </el-col>\r\n\r\n                  <el-col :span=\"4\" class=\"action-col\">\r\n                    <el-button\r\n                        type=\"danger\"\r\n                        size=\"small\"\r\n                        @click=\"handleCancel(item.id)\"\r\n                    >\r\n                      取消预定\r\n                    </el-button>\r\n                  </el-col>\r\n                </el-row>\r\n              </el-card>\r\n            </div>\r\n          </div>\r\n        </el-tab-pane>\r\n\r\n        <!-- 已到货标签页 -->\r\n        <el-tab-pane label=\"已到货\" name=\"1\">\r\n          <div v-loading=\"loadingArrived\" class=\"reservation-list\">\r\n            <el-empty\r\n                v-if=\"arrivedList.length === 0\"\r\n                description=\"暂无到货记录\"\r\n            ></el-empty>\r\n\r\n            <div\r\n                v-for=\"item in arrivedList\"\r\n                :key=\"item.id\"\r\n                class=\"reservation-item\"\r\n            >\r\n              <el-card shadow=\"hover\">\r\n                <el-row :gutter=\"20\">\r\n                  <el-col :span=\"4\">\r\n                    <el-image\r\n                        :src=\"item.bookCover || require('@/assets/default-book.png')\"\r\n                        @click=\"handleSkip(item.bookId)\"\r\n                        class=\"clickable-cover book-cover\"\r\n                        fit=\"contain\"\r\n                    />\r\n                  </el-col>\r\n\r\n                  <el-col :span=\"16\">\r\n                    <div class=\"book-info\">\r\n                      <h3 class=\"book-title\">{{ item.bookName }}</h3>\r\n                      <div class=\"meta-info\">\r\n                        <span class=\"quantity\">到货数量：{{ item.quantity }}</span>\r\n                        <span class=\"create-time\">到货时间：{{ formatTime(item.updateTime) }}</span>\r\n                      </div>\r\n                    </div>\r\n                  </el-col>\r\n\r\n                  <el-col :span=\"4\" class=\"action-col\">\r\n                    <el-button\r\n                        type=\"danger\"\r\n                        size=\"small\"\r\n                        @click=\"handleCancel(item.id)\"\r\n                    >\r\n                      移除记录\r\n                    </el-button>\r\n                  </el-col>\r\n                </el-row>\r\n              </el-card>\r\n            </div>\r\n          </div>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n    <template>\r\n      <!-- 新增分页组件 -->\r\n      <el-pagination\r\n          background\r\n          layout=\"prev, pager, next\"\r\n          :total=\"pagination.total\"\r\n          :page-size=\"pagination.pageSize\"\r\n          :current-page=\"pagination.pageNum\"\r\n          @current-change=\"handlePageChange\"\r\n      ></el-pagination>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { formatDate } from '@/store/formatDate'\r\n\r\nexport default {\r\n  name: 'MyReservation',\r\n  data() {\r\n    return {\r\n      activeStatus: '0',\r\n      pendingList: [],\r\n      arrivedList: [],\r\n      loadingPending: false,\r\n      loadingArrived: false,\r\n      pagination: {\r\n        pageSize: 10,\r\n        pageNum: 1,\r\n        total: 0\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadReservations(0)\r\n    this.loadReservations(1)\r\n  },\r\n  methods: {\r\n    async loadReservations(status) {\r\n      const loadingKey = status === 0 ? 'loadingPending' : 'loadingArrived'\r\n      try {\r\n        this[loadingKey] = true\r\n        const userId = JSON.parse(sessionStorage.getItem('CurUser')).id\r\n        const res = await this.$axios.post(this.$httpUrl + '/reservation/listByUser', {\r\n          pageSize: this.pagination.pageSize,\r\n          pageNum: this.pagination.pageNum,\r\n          param: { userId, status }\r\n        })\r\n\r\n        if (status === 0) {\r\n          this.pendingList = res.data.data\r\n          this.pagination.total = res.data.total;\r\n        } else {\r\n          this.arrivedList = res.data.data\r\n          this.pagination.total = res.data.total;\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取预定记录失败')\r\n      } finally {\r\n        this[loadingKey] = false\r\n      }\r\n    },\r\n\r\n    async handleCancel(id) {\r\n      try {\r\n        await this.$confirm('确定要执行该操作吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        })\r\n\r\n        const res = await this.$axios.post(this.$httpUrl + '/reservation/cancel', { id })\r\n        if (res.data.code === 200) {\r\n          this.$message.success('操作成功')\r\n          this.loadReservations(0)\r\n          this.loadReservations(1)\r\n        }\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('操作失败')\r\n        }\r\n      }\r\n    },\r\n\r\n    handlePageChange(page) {\r\n      this.pagination.pageNum = page;\r\n      this.loadReservations();\r\n    },\r\n\r\n    handleSkip(id) {\r\n      this.$router.push({\r\n        path: '/book',\r\n        query: { id }\r\n      });\r\n    },\r\n\r\n    // 格式化时间显示\r\n    formatTime(time) {\r\n      if (!time) return '暂无时间信息';\r\n      try {\r\n        // 处理后端返回的时间格式\r\n        const dateStr = typeof time === 'string' ? time : time.toString();\r\n        return formatDate(new Date(dateStr), 'yyyy-MM-dd hh:mm:ss');\r\n      } catch (e) {\r\n        console.error('时间格式错误:', time);\r\n        return '时间格式异常';\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.reservation-container {\r\n  max-width: 1200px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n}\r\n\r\n.reservation-card {\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n::v-deep .el-tabs__nav-wrap {\r\n  padding: 0 20px;\r\n}\r\n\r\n.reservation-item {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.book-cover {\r\n  height: 120px;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n}\r\n.clickable-cover {\r\n  cursor: pointer;\r\n  transition: transform 0.3s;\r\n}\r\n.clickable-cover:hover {\r\n  transform: scale(1.05);\r\n}\r\n\r\n.book-title {\r\n  font-size: 18px;\r\n  color: #2c3e50;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.meta-info {\r\n  color: #666;\r\n  font-size: 14px;\r\n}\r\n\r\n.meta-info span {\r\n  display: block;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.action-col {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n}\r\n</style>"],"mappings":";AAsHA,SAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,WAAA;MACAC,WAAA;MACAC,cAAA;MACAC,cAAA;MACAC,UAAA;QACAC,QAAA;QACAC,OAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,gBAAA;IACA,KAAAA,gBAAA;EACA;EACAC,OAAA;IACA,MAAAD,iBAAAE,MAAA;MACA,MAAAC,UAAA,GAAAD,MAAA;MACA;QACA,KAAAC,UAAA;QACA,MAAAC,MAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,cAAA,CAAAC,OAAA,aAAAC,EAAA;QACA,MAAAC,GAAA,cAAAC,MAAA,CAAAC,IAAA,MAAAC,QAAA;UACAjB,QAAA,OAAAD,UAAA,CAAAC,QAAA;UACAC,OAAA,OAAAF,UAAA,CAAAE,OAAA;UACAiB,KAAA;YAAAV,MAAA;YAAAF;UAAA;QACA;QAEA,IAAAA,MAAA;UACA,KAAAX,WAAA,GAAAmB,GAAA,CAAArB,IAAA,CAAAA,IAAA;UACA,KAAAM,UAAA,CAAAG,KAAA,GAAAY,GAAA,CAAArB,IAAA,CAAAS,KAAA;QACA;UACA,KAAAN,WAAA,GAAAkB,GAAA,CAAArB,IAAA,CAAAA,IAAA;UACA,KAAAM,UAAA,CAAAG,KAAA,GAAAY,GAAA,CAAArB,IAAA,CAAAS,KAAA;QACA;MACA,SAAAiB,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;QACA,KAAAZ,UAAA;MACA;IACA;IAEA,MAAAc,aAAAR,EAAA;MACA;QACA,WAAAS,QAAA;UACAC,iBAAA;UACAC,gBAAA;UACAC,IAAA;QACA;QAEA,MAAAX,GAAA,cAAAC,MAAA,CAAAC,IAAA,MAAAC,QAAA;UAAAJ;QAAA;QACA,IAAAC,GAAA,CAAArB,IAAA,CAAAiC,IAAA;UACA,KAAAN,QAAA,CAAAO,OAAA;UACA,KAAAvB,gBAAA;UACA,KAAAA,gBAAA;QACA;MACA,SAAAe,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,QAAA,CAAAD,KAAA;QACA;MACA;IACA;IAEAS,iBAAAC,IAAA;MACA,KAAA9B,UAAA,CAAAE,OAAA,GAAA4B,IAAA;MACA,KAAAzB,gBAAA;IACA;IAEA0B,WAAAjB,EAAA;MACA,KAAAkB,OAAA,CAAAC,IAAA;QACAC,IAAA;QACAC,KAAA;UAAArB;QAAA;MACA;IACA;IAEA;IACAsB,WAAAC,IAAA;MACA,KAAAA,IAAA;MACA;QACA;QACA,MAAAC,OAAA,UAAAD,IAAA,gBAAAA,IAAA,GAAAA,IAAA,CAAAE,QAAA;QACA,OAAA/C,UAAA,KAAAgD,IAAA,CAAAF,OAAA;MACA,SAAAG,CAAA;QACAC,OAAA,CAAAtB,KAAA,YAAAiB,IAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}