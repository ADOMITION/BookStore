{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      paymentMethods: [{\n        type: 'alipay',\n        name: '支付宝',\n        icon: require('@/assets/alipay.jpg'),\n        description: '数亿用户都在用的安全支付'\n      }, {\n        type: 'wechat',\n        name: '微信支付',\n        icon: require('@/assets/wechat-pay.jpg'),\n        description: '微信用户首选支付方式'\n      }],\n      order: {\n        oid: this.$route.query.oid,\n        total: parseFloat(this.$route.query.total)\n      },\n      paymentType: 'alipay',\n      loading: false\n    };\n  },\n  methods: {\n    async handlePay() {\n      this.loading = true;\n      try {\n        const {\n          data\n        } = await this.$axios.post(this.$httpUrl + '/order/pay', {\n          oid: this.order.oid\n        });\n        if (data.code === 200) {\n          this.$router.push({\n            path: '/pay-result',\n            query: {\n              success: true,\n              oid: this.order.oid\n            }\n          });\n        }\n      } catch (error) {\n        // 新增库存不足的提示\n        if (error.response && error.response.data.msg.includes(\"库存不足\")) {\n          this.$message.error('部分商品库存不足，支付失败');\n        } else {\n          this.$message.error('支付失败');\n        }\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","paymentMethods","type","name","icon","require","description","order","oid","$route","query","total","parseFloat","paymentType","loading","methods","handlePay","$axios","post","$httpUrl","code","$router","push","path","success","error","response","msg","includes","$message"],"sources":["src/user/PayPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"pay-container\">\r\n    <el-steps :active=\"3\" align-center class=\"enhanced-steps\">\r\n      <el-step title=\"首页\" >\r\n        <template #icon>\r\n          <i class=\"custom-icon el-icon-s-home\"></i>\r\n        </template>\r\n      </el-step>\r\n      <el-step title=\"确认订单\">\r\n        <template #icon>\r\n          <i class=\"custom-icon el-icon-s-order\"></i>\r\n        </template>\r\n      </el-step>\r\n      <el-step title=\"支付\">\r\n        <template #icon>\r\n          <i class=\"custom-icon el-icon-wallet active-step\"></i>\r\n        </template>\r\n      </el-step>\r\n      <el-step title=\"完成\">\r\n        <template #icon>\r\n          <i class=\"custom-icon el-icon-success\"></i>\r\n        </template>\r\n      </el-step>\r\n    </el-steps>\r\n\r\n    <el-card class=\"enhanced-card\">\r\n      <div class=\"order-header\">\r\n        <svg-icon icon-class=\"order\" class=\"order-icon\" />\r\n        <div class=\"order-meta\">\r\n          <h3 class=\"order-number\">订单号：{{ order.oid }}</h3>\r\n        </div>\r\n      </div>\r\n\r\n      <el-divider class=\"fancy-divider\" />\r\n\r\n      <div class=\"amount-display\">\r\n        <span class=\"amount-label\">应付总额</span>\r\n        <span class=\"amount-value\">¥{{ order.total.toFixed(2) }}</span>\r\n      </div>\r\n\r\n      <!-- 支付方式美化 -->\r\n      <div class=\"payment-options\">\r\n        <div\r\n            v-for=\"method in paymentMethods\"\r\n            :key=\"method.type\"\r\n            class=\"payment-card\"\r\n            :class=\"{ 'active': paymentType === method.type }\"\r\n            @click=\"paymentType = method.type\"\r\n        >\r\n          <img\r\n              :src=\"method.icon\"\r\n              class=\"payment-logo\"\r\n              :alt=\"method.name\"\r\n          />\r\n          <div class=\"payment-info\">\r\n            <h4>{{ method.name }}</h4>\r\n            <p>{{ method.description }}</p>\r\n          </div>\r\n          <i class=\"el-icon-check selected-icon\"></i>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 支付按钮美化 -->\r\n      <el-button\r\n          type=\"gradient-success\"\r\n          class=\"animated-btn\"\r\n          @click=\"handlePay\"\r\n          :loading=\"loading\"\r\n      >\r\n        <span class=\"btn-content\">\r\n          <i class=\"el-icon-wallet\"></i>\r\n          <span>立即支付</span>\r\n        </span>\r\n      </el-button>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      paymentMethods: [\r\n        {\r\n          type: 'alipay',\r\n          name: '支付宝',\r\n          icon: require('@/assets/alipay.jpg'),\r\n          description: '数亿用户都在用的安全支付'\r\n        },\r\n        {\r\n          type: 'wechat',\r\n          name: '微信支付',\r\n          icon: require('@/assets/wechat-pay.jpg'),\r\n          description: '微信用户首选支付方式'\r\n        }\r\n      ],\r\n      order: {\r\n        oid: this.$route.query.oid,\r\n        total: parseFloat(this.$route.query.total)\r\n      },\r\n      paymentType: 'alipay',\r\n      loading: false\r\n    }\r\n  },\r\n  methods: {\r\n    async handlePay() {\r\n      this.loading = true\r\n      try {\r\n        const { data } = await this.$axios.post(this.$httpUrl+'/order/pay', {\r\n          oid: this.order.oid,\r\n        })\r\n\r\n        if (data.code === 200) {\r\n          this.$router.push({\r\n            path: '/pay-result',\r\n            query: {\r\n              success: true, oid: this.order.oid\r\n            }\r\n          })\r\n        }\r\n      } catch (error) {\r\n        // 新增库存不足的提示\r\n        if(error.response && error.response.data.msg.includes(\"库存不足\")) {\r\n          this.$message.error('部分商品库存不足，支付失败');\r\n        } else {\r\n          this.$message.error('支付失败');\r\n        }\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pay-container {\r\n  max-width: 800px;\r\n  margin: 40px auto;\r\n  padding: 0 20px;\r\n}\r\n\r\n/* 步骤条美化 */\r\n.enhanced-steps {\r\n  margin-bottom: 50px;\r\n  ::v-deep .el-step__head {\r\n    &.is-process {\r\n      color: #409EFF;\r\n      border-color: #409EFF;\r\n    }\r\n  }\r\n  .custom-icon {\r\n    font-size: 28px;\r\n    color: #909399;\r\n    transition: all 0.3s;\r\n  }\r\n  .active-step {\r\n    color: #409EFF;\r\n    transform: scale(1.1);\r\n  }\r\n}\r\n\r\n/* 卡片美化 */\r\n.enhanced-card {\r\n  border-radius: 12px;\r\n  box-shadow: 0 6px 18px rgba(0, 0, 0, 0.08);\r\n  border: none;\r\n  .order-header {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    background: linear-gradient(135deg, #f8f9fa 0%, #f1f3f5 100%);\r\n    border-radius: 12px 12px 0 0;\r\n    .order-icon {\r\n      width: 48px;\r\n      height: 48px;\r\n      margin-right: 20px;\r\n      color: #409EFF;\r\n    }\r\n    .order-number {\r\n      margin: 0;\r\n      color: #2c3e50;\r\n      font-weight: 600;\r\n    }\r\n    .order-time {\r\n      margin: 4px 0 0;\r\n      color: #7f8c8d;\r\n    }\r\n  }\r\n}\r\n\r\n/* 金额展示 */\r\n.amount-display {\r\n  text-align: center;\r\n  margin: 40px 0;\r\n  .amount-label {\r\n    display: block;\r\n    color: #95a5a6;\r\n    font-size: 16px;\r\n  }\r\n  .amount-value {\r\n    display: block;\r\n    font-size: 36px;\r\n    color: #e74c3c;\r\n    font-weight: 700;\r\n    margin-top: 10px;\r\n  }\r\n}\r\n\r\n/* 支付选项 */\r\n.payment-options {\r\n  margin: 40px 0;\r\n  .payment-card {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n    border: 2px solid #eee;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n    &:hover {\r\n      transform: translateY(-3px);\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\r\n    }\r\n\r\n    &.active {\r\n      border-color: #409EFF;\r\n      background: #f8faff;\r\n      .selected-icon {\r\n        opacity: 1;\r\n        transform: scale(1);\r\n      }\r\n    }\r\n\r\n    .payment-logo {\r\n      width: 80px;\r\n      height: 80px;\r\n      margin-right: 20px;\r\n      object-fit: contain;\r\n    }\r\n\r\n    .payment-info {\r\n      h4 {\r\n        margin: 0 0 8px;\r\n        color: #2c3e50;\r\n        font-size: 18px;\r\n      }\r\n      p {\r\n        margin: 0;\r\n        color: #7f8c8d;\r\n        font-size: 14px;\r\n      }\r\n    }\r\n\r\n    .selected-icon {\r\n      position: absolute;\r\n      right: 20px;\r\n      color: #409EFF;\r\n      font-size: 24px;\r\n      opacity: 0;\r\n      transform: scale(0);\r\n      transition: all 0.3s;\r\n    }\r\n  }\r\n}\r\n\r\n/* 动态按钮 */\r\n.animated-btn {\r\n  width: 240px;\r\n  height: 52px;\r\n  margin: 30px auto;\r\n  border: none;\r\n  background: linear-gradient(135deg, #409EFF 0%, #337ecc 100%);\r\n  border-radius: 8px;\r\n  transition: all 0.3s;\r\n\r\n  .btn-content {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 18px;\r\n    i {\r\n      margin-right: 10px;\r\n      font-size: 20px;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 5px 15px rgba(64, 158, 255, 0.4);\r\n  }\r\n\r\n  &:active {\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n/* 艺术分隔线 */\r\n.fancy-divider {\r\n  ::v-deep &.el-divider--horizontal {\r\n    margin: 30px 0;\r\n    &:before, &:after {\r\n      height: 2px;\r\n      border-radius: 1px;\r\n      background: linear-gradient(90deg, transparent 0%, #409EFF 50%, transparent 100%);\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":";AA+EA;EACAA,KAAA;IACA;MACAC,cAAA,GACA;QACAC,IAAA;QACAC,IAAA;QACAC,IAAA,EAAAC,OAAA;QACAC,WAAA;MACA,GACA;QACAJ,IAAA;QACAC,IAAA;QACAC,IAAA,EAAAC,OAAA;QACAC,WAAA;MACA,EACA;MACAC,KAAA;QACAC,GAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,GAAA;QACAG,KAAA,EAAAC,UAAA,MAAAH,MAAA,CAAAC,KAAA,CAAAC,KAAA;MACA;MACAE,WAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,UAAA;MACA,KAAAF,OAAA;MACA;QACA;UAAAd;QAAA,eAAAiB,MAAA,CAAAC,IAAA,MAAAC,QAAA;UACAX,GAAA,OAAAD,KAAA,CAAAC;QACA;QAEA,IAAAR,IAAA,CAAAoB,IAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;YACAC,IAAA;YACAb,KAAA;cACAc,OAAA;cAAAhB,GAAA,OAAAD,KAAA,CAAAC;YACA;UACA;QACA;MACA,SAAAiB,KAAA;QACA;QACA,IAAAA,KAAA,CAAAC,QAAA,IAAAD,KAAA,CAAAC,QAAA,CAAA1B,IAAA,CAAA2B,GAAA,CAAAC,QAAA;UACA,KAAAC,QAAA,CAAAJ,KAAA;QACA;UACA,KAAAI,QAAA,CAAAJ,KAAA;QACA;MACA;QACA,KAAAX,OAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}