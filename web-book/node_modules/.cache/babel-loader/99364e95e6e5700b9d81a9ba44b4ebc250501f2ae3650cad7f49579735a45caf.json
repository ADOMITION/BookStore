{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nexport default {\n  name: \"CartPage\",\n  data() {\n    return {\n      cartItems: [],\n      loading: false\n    };\n  },\n  computed: {\n    totalAmount() {\n      return this.cartItems.reduce((sum, item) => {\n        return sum + item.book.price * item.quantity;\n      }, 0);\n    }\n  },\n  created() {\n    this.loadCart();\n  },\n  methods: {\n    async loadCart() {\n      this.loading = true;\n      try {\n        const user = JSON.parse(sessionStorage.getItem('CurUser'));\n        let userId = user ? user.id : null;\n\n        // 未登录读取本地存储\n        if (!userId) {\n          const localCart = localStorage.getItem('guestCart');\n          if (localCart) {\n            this.cartItems = JSON.parse(localCart);\n          }\n          return;\n        }\n        const res = await this.$axios.get(this.$httpUrl + '/cart', {\n          params: {\n            userId\n          }\n        });\n        if (res.data.code === 200) {\n          this.cartItems = res.data.data.map(item => ({\n            ...item,\n            book: item.book || {}\n          }));\n        }\n      } catch (error) {\n        this.$message.error('加载购物车失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    async handleQuantityChange(item) {\n      try {\n        if (this.isGuest()) {\n          this.updateLocalCart();\n          return;\n        }\n        await this.$axios.put(`${this.$httpUrl}/cart/${item.id}`, {\n          quantity: item.quantity\n        });\n      } catch (error) {\n        this.$message.error('更新数量失败');\n      }\n    },\n    async removeItem(itemId) {\n      try {\n        if (this.isGuest()) {\n          this.cartItems = this.cartItems.filter(i => i.id !== itemId);\n          this.updateLocalCart();\n          return;\n        }\n        await this.$axios.delete(`${this.$httpUrl}/cart/${itemId}`);\n        this.cartItems = this.cartItems.filter(i => i.id !== itemId);\n        this.$message.success('删除成功');\n      } catch (error) {\n        this.$message.error('删除失败');\n      }\n    },\n    goToCheckout() {\n      if (!this.checkLogin()) return;\n      if (this.cartItems.length === 0) {\n        this.$message.warning('请先选择商品');\n        return;\n      }\n      this.$router.push('/pay');\n    },\n    isGuest() {\n      return !sessionStorage.getItem('CurUser');\n    },\n    updateLocalCart() {\n      if (this.isGuest()) {\n        localStorage.setItem('guestCart', JSON.stringify(this.cartItems));\n      }\n    },\n    checkLogin() {\n      const user = sessionStorage.getItem('CurUser');\n      if (!user) {\n        this.$message.warning('请先登录');\n        this.$router.push('/login');\n        return false;\n      }\n      return true;\n    }\n  }\n};","map":{"version":3,"names":["name","data","cartItems","loading","computed","totalAmount","reduce","sum","item","book","price","quantity","created","loadCart","methods","user","JSON","parse","sessionStorage","getItem","userId","id","localCart","localStorage","res","$axios","get","$httpUrl","params","code","map","error","$message","handleQuantityChange","isGuest","updateLocalCart","put","removeItem","itemId","filter","i","delete","success","goToCheckout","checkLogin","length","warning","$router","push","setItem","stringify"],"sources":["src/user/CartPage.vue"],"sourcesContent":["<!--\r\n<template>\r\n  <div>\r\n    <el-row style=\"margin-left: 20%;margin-right: 20%;margin-top: 30px\">\r\n      <h3>购物车</h3>\r\n      <el-table :data=\"orderItems\"\r\n                border>\r\n        <el-table-column prop=\"product.name\"\r\n                         label=\"商品信息\"/>\r\n        <el-table-column prop=\"product.price\"\r\n                         label=\"单价\"/>\r\n        <el-table-column label=\"数量\">\r\n          <template slot-scope=\"scope\">\r\n            <el-input-number v-model=\"scope.row.number\" :min=\"1\"></el-input-number>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CartPage\",\r\n  data(){\r\n    return{\r\n      uri:this.$httpUrl+'cart',\r\n      orderItems:[],\r\n    }\r\n  },\r\n  created() {\r\n    this.$axios.get(this.uri)\r\n        .then(response => {\r\n              this.orderItems = response.data;\r\n            }\r\n        )\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n-->\r\n<template>\r\n  <div class=\"cart-container\">\r\n    <h3 class=\"page-title\">我的购物车</h3>\r\n\r\n    <div v-if=\"cartItems.length === 0\" class=\"empty-cart\">\r\n      <el-empty description=\"购物车空空如也，快去挑选好书吧~\">\r\n        <el-button type=\"primary\" @click=\"$router.push('')\">去逛逛</el-button>\r\n      </el-empty>\r\n    </div>\r\n\r\n    <el-card v-else class=\"cart-card\">\r\n      <el-table\r\n          :data=\"cartItems\"\r\n          style=\"width: 100%\"\r\n          v-loading=\"loading\"\r\n      >\r\n        <el-table-column label=\"商品信息\" width=\"400\">\r\n          <template slot-scope=\"{row}\">\r\n            <div class=\"book-info\">\r\n              <el-image\r\n                  :src=\"row.book.url || require('@/assets/default-book.png')\"\r\n                  class=\"book-cover\"\r\n                  fit=\"contain\"\r\n              ></el-image>\r\n              <div class=\"info\">\r\n                <div class=\"title\">{{ row.book.name }}</div>\r\n                <div class=\"author\">{{ row.book.author }}</div>\r\n                <div class=\"price\">¥{{ row.book.price.toFixed(2) }}</div>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"数量\" width=\"150\" align=\"center\">\r\n          <template slot-scope=\"{row}\">\r\n            <el-input-number\r\n                v-model=\"row.quantity\"\r\n                :min=\"1\"\r\n                :max=\"row.book.stock\"\r\n                @change=\"handleQuantityChange(row)\"\r\n            ></el-input-number>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"小计\" align=\"center\">\r\n          <template slot-scope=\"{row}\">\r\n            ¥{{ (row.book.price * row.quantity).toFixed(2) }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"操作\" width=\"100\" align=\"center\">\r\n          <template slot-scope=\"{row}\">\r\n            <el-button\r\n                type=\"danger\"\r\n                icon=\"el-icon-delete\"\r\n                circle\r\n                @click=\"removeItem(row.id)\"\r\n            ></el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"cart-footer\">\r\n        <div class=\"total\">\r\n          合计：<span class=\"amount\">¥{{ totalAmount.toFixed(2) }}</span>\r\n        </div>\r\n        <el-button\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            @click=\"goToCheckout\"\r\n        >去结算</el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CartPage\",\r\n  data() {\r\n    return {\r\n      cartItems: [],\r\n      loading: false\r\n    }\r\n  },\r\n  computed: {\r\n    totalAmount() {\r\n      return this.cartItems.reduce((sum, item) => {\r\n        return sum + (item.book.price * item.quantity)\r\n      }, 0)\r\n    }\r\n  },\r\n  created() {\r\n    this.loadCart()\r\n  },\r\n  methods: {\r\n    async loadCart() {\r\n      this.loading = true\r\n      try {\r\n        const user = JSON.parse(sessionStorage.getItem('CurUser'))\r\n        let userId = user ? user.id : null\r\n\r\n        // 未登录读取本地存储\r\n        if(!userId) {\r\n          const localCart = localStorage.getItem('guestCart')\r\n          if(localCart) {\r\n            this.cartItems = JSON.parse(localCart)\r\n          }\r\n          return\r\n        }\r\n\r\n        const res = await this.$axios.get(this.$httpUrl + '/cart', {\r\n          params: { userId }\r\n        })\r\n\r\n        if(res.data.code === 200) {\r\n          this.cartItems = res.data.data.map(item => ({\r\n            ...item,\r\n            book: item.book || {}\r\n          }))\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('加载购物车失败')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n\r\n    async handleQuantityChange(item) {\r\n      try {\r\n        if(this.isGuest()) {\r\n          this.updateLocalCart()\r\n          return\r\n        }\r\n\r\n        await this.$axios.put(`${this.$httpUrl}/cart/${item.id}`, {\r\n          quantity: item.quantity\r\n        })\r\n      } catch (error) {\r\n        this.$message.error('更新数量失败')\r\n      }\r\n    },\r\n\r\n    async removeItem(itemId) {\r\n      try {\r\n        if(this.isGuest()) {\r\n          this.cartItems = this.cartItems.filter(i => i.id !== itemId)\r\n          this.updateLocalCart()\r\n          return\r\n        }\r\n\r\n        await this.$axios.delete(`${this.$httpUrl}/cart/${itemId}`)\r\n        this.cartItems = this.cartItems.filter(i => i.id !== itemId)\r\n        this.$message.success('删除成功')\r\n      } catch (error) {\r\n        this.$message.error('删除失败')\r\n      }\r\n    },\r\n\r\n    goToCheckout() {\r\n      if(!this.checkLogin()) return\r\n      if(this.cartItems.length === 0) {\r\n        this.$message.warning('请先选择商品')\r\n        return\r\n      }\r\n      this.$router.push('/pay')\r\n    },\r\n\r\n    isGuest() {\r\n      return !sessionStorage.getItem('CurUser')\r\n    },\r\n\r\n    updateLocalCart() {\r\n      if(this.isGuest()) {\r\n        localStorage.setItem('guestCart', JSON.stringify(this.cartItems))\r\n      }\r\n    },\r\n\r\n    checkLogin() {\r\n      const user = sessionStorage.getItem('CurUser')\r\n      if(!user) {\r\n        this.$message.warning('请先登录')\r\n        this.$router.push('/login')\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.cart-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.page-title {\r\n  text-align: center;\r\n  margin: 20px 0;\r\n  color: #333;\r\n}\r\n\r\n.book-info {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n}\r\n\r\n.book-cover {\r\n  width: 80px;\r\n  height: 100px;\r\n  margin-right: 15px;\r\n}\r\n\r\n.info {\r\n  flex: 1;\r\n}\r\n\r\n.title {\r\n  font-weight: 500;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.author {\r\n  color: #666;\r\n  font-size: 12px;\r\n}\r\n\r\n.price {\r\n  color: #f56c6c;\r\n  font-weight: bold;\r\n}\r\n\r\n.cart-footer {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n}\r\n\r\n.total {\r\n  margin-right: 30px;\r\n  font-size: 16px;\r\n}\r\n\r\n.amount {\r\n  color: #f56c6c;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.empty-cart {\r\n  text-align: center;\r\n  margin-top: 50px;\r\n}\r\n</style>"],"mappings":";;;;;AAyHA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,YAAA;MACA,YAAAH,SAAA,CAAAI,MAAA,EAAAC,GAAA,EAAAC,IAAA;QACA,OAAAD,GAAA,GAAAC,IAAA,CAAAC,IAAA,CAAAC,KAAA,GAAAF,IAAA,CAAAG,QAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA;EACA;EACAC,OAAA;IACA,MAAAD,SAAA;MACA,KAAAV,OAAA;MACA;QACA,MAAAY,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,cAAA,CAAAC,OAAA;QACA,IAAAC,MAAA,GAAAL,IAAA,GAAAA,IAAA,CAAAM,EAAA;;QAEA;QACA,KAAAD,MAAA;UACA,MAAAE,SAAA,GAAAC,YAAA,CAAAJ,OAAA;UACA,IAAAG,SAAA;YACA,KAAApB,SAAA,GAAAc,IAAA,CAAAC,KAAA,CAAAK,SAAA;UACA;UACA;QACA;QAEA,MAAAE,GAAA,cAAAC,MAAA,CAAAC,GAAA,MAAAC,QAAA;UACAC,MAAA;YAAAR;UAAA;QACA;QAEA,IAAAI,GAAA,CAAAvB,IAAA,CAAA4B,IAAA;UACA,KAAA3B,SAAA,GAAAsB,GAAA,CAAAvB,IAAA,CAAAA,IAAA,CAAA6B,GAAA,CAAAtB,IAAA;YACA,GAAAA,IAAA;YACAC,IAAA,EAAAD,IAAA,CAAAC,IAAA;UACA;QACA;MACA,SAAAsB,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;QACA,KAAA5B,OAAA;MACA;IACA;IAEA,MAAA8B,qBAAAzB,IAAA;MACA;QACA,SAAA0B,OAAA;UACA,KAAAC,eAAA;UACA;QACA;QAEA,WAAAV,MAAA,CAAAW,GAAA,SAAAT,QAAA,SAAAnB,IAAA,CAAAa,EAAA;UACAV,QAAA,EAAAH,IAAA,CAAAG;QACA;MACA,SAAAoB,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IAEA,MAAAM,WAAAC,MAAA;MACA;QACA,SAAAJ,OAAA;UACA,KAAAhC,SAAA,QAAAA,SAAA,CAAAqC,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAnB,EAAA,KAAAiB,MAAA;UACA,KAAAH,eAAA;UACA;QACA;QAEA,WAAAV,MAAA,CAAAgB,MAAA,SAAAd,QAAA,SAAAW,MAAA;QACA,KAAApC,SAAA,QAAAA,SAAA,CAAAqC,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAnB,EAAA,KAAAiB,MAAA;QACA,KAAAN,QAAA,CAAAU,OAAA;MACA,SAAAX,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IAEAY,aAAA;MACA,UAAAC,UAAA;MACA,SAAA1C,SAAA,CAAA2C,MAAA;QACA,KAAAb,QAAA,CAAAc,OAAA;QACA;MACA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IAEAd,QAAA;MACA,QAAAhB,cAAA,CAAAC,OAAA;IACA;IAEAgB,gBAAA;MACA,SAAAD,OAAA;QACAX,YAAA,CAAA0B,OAAA,cAAAjC,IAAA,CAAAkC,SAAA,MAAAhD,SAAA;MACA;IACA;IAEA0C,WAAA;MACA,MAAA7B,IAAA,GAAAG,cAAA,CAAAC,OAAA;MACA,KAAAJ,IAAA;QACA,KAAAiB,QAAA,CAAAc,OAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;QACA;MACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}