{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { formatDate } from '@/store/formatDate';\nexport default {\n  name: \"OrderPage\",\n  data() {\n    return {\n      orders: [],\n      loading: false\n    };\n  },\n  created() {\n    this.loadOrders();\n  },\n  methods: {\n    async loadOrders() {\n      this.loading = true;\n      try {\n        const {\n          data\n        } = await this.$axios.get(`${this.$httpUrl}/order/list`);\n        if (data.code === 200) {\n          this.orders = data.data;\n        }\n      } catch (error) {\n        this.$message.error('获取订单失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    statusTagType(status) {\n      const map = {\n        '待付款': 'warning',\n        '已付款': 'success',\n        '已完成': 'info',\n        '已取消': 'danger'\n      };\n      return map[status] || 'info';\n    },\n    formatTime(timeStr) {\n      //将后端返回的时间字符串转换为Date对象\n      const date = new Date(timeStr);\n      return formatDate(date, 'yyyy-MM-dd hh:mm');\n    },\n    handlePay(orderId, amount) {\n      this.$router.push({\n        path: '/pay',\n        query: {\n          oid: orderId,\n          total: amount\n        }\n      });\n    },\n    viewDetail(orderId) {\n      this.$router.push({\n        name: 'OrderDetail',\n        // 使用路由名称\n        params: {\n          oid: orderId // 参数名称与路由定义保持一致\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["formatDate","name","data","orders","loading","created","loadOrders","methods","$axios","get","$httpUrl","code","error","$message","statusTagType","status","map","formatTime","timeStr","date","Date","handlePay","orderId","amount","$router","push","path","query","oid","total","viewDetail","params"],"sources":["src/user/OrderPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-container\">\r\n    <h3 class=\"page-title\">我的订单</h3>\r\n\r\n    <el-table\r\n        :data=\"orders\"\r\n        border\r\n        style=\"width: 90%; margin: 20px auto\"\r\n        v-loading=\"loading\"\r\n    >\r\n      <el-table-column prop=\"id\" label=\"订单号\" width=\"120\" align=\"center\"></el-table-column>\r\n\r\n      <el-table-column label=\"商品信息\" width=\"400\">\r\n        <template slot-scope=\"{row}\">\r\n          <div v-for=\"item in row.items\" :key=\"item.id\" class=\"goods-item\">\r\n            <el-image\r\n                :src=\"item.book.url || require('@/assets/default-book.png')\"\r\n                class=\"book-cover\"\r\n            ></el-image>\r\n            <div class=\"goods-info\">\r\n              <div class=\"book-name\">{{ item.book.name }}</div>\r\n              <div class=\"book-author\">{{ item.book.author }}</div>\r\n              <div class=\"quantity\">x{{ item.quantity }}</div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"总金额\" width=\"120\" align=\"center\">\r\n        <template slot-scope=\"{row}\">\r\n          ￥{{ row.totalAmount.toFixed(2) }}\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"订单状态\" width=\"120\" align=\"center\">\r\n        <template slot-scope=\"{row}\">\r\n          <el-tag :type=\"statusTagType(row.status)\">\r\n            {{ row.status }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"下单时间\" width=\"180\" align=\"center\">\r\n        <template slot-scope=\"{row}\">\r\n          {{ formatTime(row.createtime) }}\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"操作\" align=\"center\">\r\n        <template slot-scope=\"{row}\">\r\n          <el-button\r\n              v-if=\"row.status === '待付款'\"\r\n              type=\"primary\"\r\n              size=\"mini\"\r\n              @click=\"handlePay(row.id, row.totalAmount)\"\r\n          >\r\n            立即支付\r\n          </el-button>\r\n          <el-button\r\n              type=\"info\"\r\n              size=\"mini\"\r\n              @click=\"viewDetail(row.id)\"\r\n          >\r\n            详情\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { formatDate } from '@/store/formatDate';\r\n\r\nexport default {\r\n  name: \"OrderPage\",\r\n  data() {\r\n    return {\r\n      orders: [],\r\n      loading: false\r\n    }\r\n  },\r\n  created() {\r\n    this.loadOrders();\r\n  },\r\n  methods: {\r\n    async loadOrders() {\r\n      this.loading = true;\r\n      try {\r\n        const { data } = await this.$axios.get(`${this.$httpUrl}/order/list`);\r\n        if(data.code === 200) {\r\n          this.orders = data.data;\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取订单失败');\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    statusTagType(status) {\r\n      const map = {\r\n        '待付款': 'warning',\r\n        '已付款': 'success',\r\n        '已完成': 'info',\r\n        '已取消': 'danger'\r\n      }\r\n      return map[status] || 'info';\r\n    },\r\n    formatTime(timeStr) {\r\n      //将后端返回的时间字符串转换为Date对象\r\n      const date = new Date(timeStr);\r\n      return formatDate(date, 'yyyy-MM-dd hh:mm');\r\n    },\r\n    handlePay(orderId, amount) {\r\n      this.$router.push({\r\n        path: '/pay',\r\n        query: {\r\n          oid: orderId,\r\n          total: amount\r\n        }\r\n      });\r\n    },\r\n    viewDetail(orderId) {\r\n      this.$router.push({\r\n        name: 'OrderDetail', // 使用路由名称\r\n        params: {\r\n          oid: orderId // 参数名称与路由定义保持一致\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page-title {\r\n  text-align: center;\r\n  margin: 20px 0;\r\n  color: #333;\r\n}\r\n\r\n.goods-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.book-cover {\r\n  width: 60px;\r\n  height: 80px;\r\n  margin-right: 15px;\r\n}\r\n\r\n.goods-info {\r\n  flex: 1;\r\n}\r\n\r\n.book-name {\r\n  font-weight: 500;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.book-author {\r\n  color: #666;\r\n  font-size: 12px;\r\n}\r\n\r\n.quantity {\r\n  color: #f56c6c;\r\n  font-size: 14px;\r\n}\r\n</style>"],"mappings":";AAwEA,SAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACA,MAAAD,WAAA;MACA,KAAAF,OAAA;MACA;QACA;UAAAF;QAAA,eAAAM,MAAA,CAAAC,GAAA,SAAAC,QAAA;QACA,IAAAR,IAAA,CAAAS,IAAA;UACA,KAAAR,MAAA,GAAAD,IAAA,CAAAA,IAAA;QACA;MACA,SAAAU,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;QACA,KAAAR,OAAA;MACA;IACA;IACAU,cAAAC,MAAA;MACA,MAAAC,GAAA;QACA;QACA;QACA;QACA;MACA;MACA,OAAAA,GAAA,CAAAD,MAAA;IACA;IACAE,WAAAC,OAAA;MACA;MACA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,OAAA;MACA,OAAAlB,UAAA,CAAAmB,IAAA;IACA;IACAE,UAAAC,OAAA,EAAAC,MAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QACAC,IAAA;QACAC,KAAA;UACAC,GAAA,EAAAN,OAAA;UACAO,KAAA,EAAAN;QACA;MACA;IACA;IACAO,WAAAR,OAAA;MACA,KAAAE,OAAA,CAAAC,IAAA;QACAxB,IAAA;QAAA;QACA8B,MAAA;UACAH,GAAA,EAAAN,OAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}