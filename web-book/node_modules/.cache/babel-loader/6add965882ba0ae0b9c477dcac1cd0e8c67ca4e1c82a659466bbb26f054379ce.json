{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      cartData: {\n        items: [],\n        totalAmount: 0\n      }\n    };\n  },\n  created() {\n    this.loadCart();\n  },\n  methods: {\n    async loadCart() {\n      try {\n        const {\n          data\n        } = await this.$axios.get(this.$httpUrl + '/cart/list');\n        if (data.code === 200) {\n          this.cartData = data.data;\n        }\n      } catch (error) {\n        this.$message.error('获取购物车失败');\n      }\n    },\n    async handleQuantityChange(item) {\n      try {\n        await this.$axios.post(this.$httpUrl + '/cart/update', {\n          id: item.id,\n          quantity: item.quantity\n        });\n        this.loadCart();\n      } catch (error) {\n        this.$message.error('修改失败');\n      }\n    },\n    async handleDelete(itemId) {\n      try {\n        await this.$axios.delete(this.$httpUrl + `/cart/delete/${itemId}`);\n        this.loadCart();\n        this.$message.success('删除成功');\n      } catch (error) {\n        this.$message.error('删除失败');\n      }\n    },\n    handleCheckout() {\n      if (!this.checkLogin()) return;\n      this.$router.push('/confirm');\n    },\n    async handleClearCart() {\n      try {\n        await this.$axios.delete(this.$httpUrl + '/cart/clear');\n        this.loadCart();\n        this.$message.success('购物车已清空');\n      } catch (error) {\n        this.$message.error('清空失败');\n      }\n    },\n    checkLogin() {\n      if (!sessionStorage.getItem('CurUser')) {\n        this.$confirm('需要登录后才能结算，是否立即登录？', '提示', {\n          confirmButtonText: '去登录',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.$router.push('/login');\n        });\n        return false;\n      }\n      return true;\n    }\n  }\n};","map":{"version":3,"names":["data","cartData","items","totalAmount","created","loadCart","methods","$axios","get","$httpUrl","code","error","$message","handleQuantityChange","item","post","id","quantity","handleDelete","itemId","delete","success","handleCheckout","checkLogin","$router","push","handleClearCart","sessionStorage","getItem","$confirm","confirmButtonText","cancelButtonText","type","then"],"sources":["src/user/CartPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart-container\">\r\n    <el-card shadow=\"hover\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>购物车（{{ cartData.items.length }}件商品）</span>\r\n        <el-button\r\n            style=\"float: right;\"\r\n            type=\"danger\"\r\n            @click=\"handleClearCart\"\r\n            :disabled=\"cartData.items.length === 0\">\r\n          清空购物车\r\n        </el-button>\r\n      </div>\r\n\r\n      <el-table :data=\"cartData.items\" border>\r\n        <el-table-column label=\"商品信息\" width=\"400\">\r\n          <template slot-scope=\"{row}\">\r\n            <div class=\"product-info\">\r\n              <el-image\r\n                  :src=\"row.book.url || require('@/assets/default-book.png')\"\r\n                  class=\"product-image\"\r\n                  fit=\"contain\"></el-image>\r\n              <div class=\"product-detail\">\r\n                <h4>{{ row.book.name }}</h4>\r\n                <p class=\"author\">{{ row.book.author }}</p>\r\n                <el-tag\r\n                    v-if=\"row.book.status === 0\"\r\n                    type=\"danger\"\r\n                    size=\"mini\">已下架</el-tag>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"单价\" width=\"120\">\r\n          <template slot-scope=\"{row}\">\r\n            <div class=\"price\">\r\n              <span v-if=\"row.discountPrice.compareTo(row.price) < 0\"\r\n                    class=\"original-price\">\r\n                ¥{{ row.price.toFixed(2) }}\r\n              </span>\r\n              <span class=\"current-price\">\r\n                ¥{{ row.discountPrice.toFixed(2) }}\r\n              </span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"数量\" width=\"150\">\r\n          <template slot-scope=\"{row}\">\r\n            <el-input-number\r\n                v-model=\"row.quantity\"\r\n                :min=\"1\"\r\n                :max=\"row.book.stock\"\r\n                @change=\"handleQuantityChange(row)\"\r\n                :disabled=\"row.book.status === 0\"></el-input-number>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"小计\" width=\"120\">\r\n          <template slot-scope=\"{row}\">\r\n            ¥{{ (row.discountPrice * row.quantity).toFixed(2) }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column label=\"操作\" width=\"80\">\r\n          <template slot-scope=\"{row}\">\r\n            <el-button\r\n                type=\"danger\"\r\n                icon=\"el-icon-delete\"\r\n                circle\r\n                @click=\"handleDelete(row.id)\"></el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"total-section\">\r\n        <div class=\"total-line\">\r\n          <span>合计：</span>\r\n          <span class=\"total-price\">¥{{ cartData.totalAmount.toFixed(2) }}</span>\r\n        </div>\r\n        <el-button\r\n            type=\"danger\"\r\n            size=\"large\"\r\n            @click=\"handleCheckout\"\r\n            :disabled=\"cartData.items.length === 0\">\r\n          去结算（{{ cartData.items.length }}件）\r\n        </el-button>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      cartData: {\r\n        items: [],\r\n        totalAmount: 0\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadCart();\r\n  },\r\n  methods: {\r\n    async loadCart() {\r\n      try {\r\n        const { data } = await this.$axios.get(this.$httpUrl + '/cart/list');\r\n        if (data.code === 200) {\r\n          this.cartData = data.data;\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取购物车失败');\r\n      }\r\n    },\r\n\r\n    async handleQuantityChange(item) {\r\n      try {\r\n        await this.$axios.post(this.$httpUrl + '/cart/update', {\r\n          id: item.id,\r\n          quantity: item.quantity\r\n        });\r\n        this.loadCart();\r\n      } catch (error) {\r\n        this.$message.error('修改失败');\r\n      }\r\n    },\r\n\r\n    async handleDelete(itemId) {\r\n      try {\r\n        await this.$axios.delete(this.$httpUrl + `/cart/delete/${itemId}`);\r\n        this.loadCart();\r\n        this.$message.success('删除成功');\r\n      } catch (error) {\r\n        this.$message.error('删除失败');\r\n      }\r\n    },\r\n\r\n    handleCheckout() {\r\n      if (!this.checkLogin()) return;\r\n      this.$router.push('/confirm');\r\n    },\r\n\r\n    async handleClearCart() {\r\n      try {\r\n        await this.$axios.delete(this.$httpUrl + '/cart/clear');\r\n        this.loadCart();\r\n        this.$message.success('购物车已清空');\r\n      } catch (error) {\r\n        this.$message.error('清空失败');\r\n      }\r\n    },\r\n\r\n    checkLogin() {\r\n      if (!sessionStorage.getItem('CurUser')) {\r\n        this.$confirm('需要登录后才能结算，是否立即登录？', '提示', {\r\n          confirmButtonText: '去登录',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.$router.push('/login');\r\n        });\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.cart-container {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.product-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.product-image {\r\n  width: 80px;\r\n  height: 100px;\r\n  margin-right: 15px;\r\n}\r\n\r\n.total-section {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n  padding: 20px;\r\n  background: #f8f8f8;\r\n}\r\n\r\n.total-price {\r\n  color: #f56c6c;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n}\r\n\r\n.original-price {\r\n  text-decoration: line-through;\r\n  color: #999;\r\n  font-size: 12px;\r\n  display: block;\r\n}\r\n\r\n.current-price {\r\n  color: #f56c6c;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n</style>"],"mappings":";AA8FA;EACAA,KAAA;IACA;MACAC,QAAA;QACAC,KAAA;QACAC,WAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA;EACA;EACAC,OAAA;IACA,MAAAD,SAAA;MACA;QACA;UAAAL;QAAA,eAAAO,MAAA,CAAAC,GAAA,MAAAC,QAAA;QACA,IAAAT,IAAA,CAAAU,IAAA;UACA,KAAAT,QAAA,GAAAD,IAAA,CAAAA,IAAA;QACA;MACA,SAAAW,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IAEA,MAAAE,qBAAAC,IAAA;MACA;QACA,WAAAP,MAAA,CAAAQ,IAAA,MAAAN,QAAA;UACAO,EAAA,EAAAF,IAAA,CAAAE,EAAA;UACAC,QAAA,EAAAH,IAAA,CAAAG;QACA;QACA,KAAAZ,QAAA;MACA,SAAAM,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IAEA,MAAAO,aAAAC,MAAA;MACA;QACA,WAAAZ,MAAA,CAAAa,MAAA,MAAAX,QAAA,mBAAAU,MAAA;QACA,KAAAd,QAAA;QACA,KAAAO,QAAA,CAAAS,OAAA;MACA,SAAAV,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IAEAW,eAAA;MACA,UAAAC,UAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IAEA,MAAAC,gBAAA;MACA;QACA,WAAAnB,MAAA,CAAAa,MAAA,MAAAX,QAAA;QACA,KAAAJ,QAAA;QACA,KAAAO,QAAA,CAAAS,OAAA;MACA,SAAAV,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IAEAY,WAAA;MACA,KAAAI,cAAA,CAAAC,OAAA;QACA,KAAAC,QAAA;UACAC,iBAAA;UACAC,gBAAA;UACAC,IAAA;QACA,GAAAC,IAAA;UACA,KAAAT,OAAA,CAAAC,IAAA;QACA;QACA;MACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}