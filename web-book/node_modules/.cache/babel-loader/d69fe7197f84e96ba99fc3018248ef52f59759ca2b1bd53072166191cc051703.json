{"ast":null,"code":"import { formatDate } from \"@/store/formatDate\";\nexport default {\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        1: 'success',\n        0: 'danger'\n      };\n      return statusMap[status];\n    },\n    statusText(status) {\n      const statusMap = {\n        1: '已通过',\n        0: '未通过'\n      };\n      return statusMap[status];\n    }\n  },\n  data() {\n    return {\n      reviewList: [],\n      total: 0,\n      pageNum: 1,\n      pageSize: 10\n    };\n  },\n  created() {\n    this.loadReviews();\n  },\n  methods: {\n    async loadReviews() {\n      const params = {\n        pageNum: this.pageNum,\n        pageSize: this.pageSize\n      };\n      try {\n        const res = await this.$axios.post(this.$httpUrl + '/review/list', params);\n        if (res.data.code === 200) {\n          this.reviewList = res.data.data;\n          this.total = res.data.total;\n        }\n      } catch (error) {\n        console.error(error);\n        this.$message.error('获取评论列表失败');\n      }\n    },\n    formatTime(time) {\n      if (!time) return \"暂无时间信息\";\n      try {\n        const dateStr = typeof time === \"string\" ? time : time.toString();\n        return formatDate(new Date(dateStr), \"yyyy-MM-dd hh:mm:ss\");\n      } catch (e) {\n        console.error(\"时间格式错误:\", time);\n        return \"时间格式异常\";\n      }\n    },\n    resetSearch() {\n      this.name = '';\n      this.storage = '';\n      this.goodstype = '';\n    },\n    handleSizeChange(val) {\n      this.pageSize = val;\n      this.loadReviews();\n    },\n    handleCurrentChange(val) {\n      this.pageNum = val;\n      this.loadReviews();\n    },\n    async handleApprove(id) {\n      try {\n        const res = await this.$axios.post(this.$httpUrl + '/review/updateStatus', {\n          id,\n          status: 1\n        });\n        if (res.data.code === 200) {\n          this.$message.success('审核通过');\n          this.loadReviews();\n        }\n      } catch (error) {\n        console.error(error);\n        this.$message.error('操作失败');\n      }\n    },\n    handleDelete(id) {\n      this.$confirm('确定删除该评论？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          const res = await this.$axios.post(this.$httpUrl + '/review/delete', {\n            id\n          });\n          if (res.data.code === 200) {\n            this.$message.success('删除成功');\n            this.loadReviews();\n          }\n        } catch (error) {\n          console.error(error);\n          this.$message.error('删除失败');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["formatDate","filters","statusFilter","status","statusMap","statusText","data","reviewList","total","pageNum","pageSize","created","loadReviews","methods","params","res","$axios","post","$httpUrl","code","error","console","$message","formatTime","time","dateStr","toString","Date","e","resetSearch","name","storage","goodstype","handleSizeChange","val","handleCurrentChange","handleApprove","id","success","handleDelete","$confirm","confirmButtonText","cancelButtonText","type","then"],"sources":["src/admin/ReviewManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-card>\r\n      <!-- 搜索栏 -->\r\n      <div class=\"filter-container\">\r\n        <el-input\r\n            v-model=\"username\"\r\n            placeholder=\"输入书籍名\"\r\n            style=\"width: 200px;\"\r\n            @keyup.enter.native=\"loadReviews\"\r\n        />\r\n        <el-input\r\n            v-model=\"bookname\"\r\n            placeholder=\"请输入用户名\"\r\n            prefix-icon=\"el-icon-user-solid\"\r\n            class=\"filter-item\"\r\n            @keyup.enter.native=\"loadReviews\"\r\n        />\r\n        <div class=\"operation-btns\">\r\n          <el-button\r\n              type=\"primary\"\r\n              icon=\"el-icon-search\"\r\n              @click=\"loadReviews\"\r\n          >查询</el-button>\r\n          <el-button\r\n              icon=\"el-icon-refresh\"\r\n              @click=\"resetSearch\"\r\n          >重置</el-button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 评论表格 -->\r\n      <el-table\r\n          :data=\"reviewList\"\r\n          border\r\n          fit\r\n          highlight-current-row\r\n          style=\"width: 100%; margin-top: 20px;\"\r\n      >\r\n        <el-table-column label=\"用户\" width=\"150\">\r\n          <template slot-scope=\"{row}\">\r\n            <div class=\"user-info\">\r\n              <el-image\r\n                  :src=\"row.avatar\"\r\n                  style=\"width: 40px; height: 40px; border-radius: 50%;\"\r\n              />\r\n              <span style=\"margin-left: 10px;\">{{ row.userName }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column prop=\"content\" label=\"评论内容\" min-width=\"200\" />\r\n        <el-table-column prop=\"createtime\" label=\"时间\" width=\"180\">\r\n          <template slot-scope=\"{row}\">\r\n            {{ formatTime(row.createtime) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"likeCount\" label=\"点赞\" width=\"80\" />\r\n        <el-table-column prop=\"replyCount\" label=\"回复\" width=\"80\" />\r\n        <el-table-column label=\"状态\" width=\"120\">\r\n          <template slot-scope=\"{row}\">\r\n            <el-tag :type=\"row.status | statusFilter\">\r\n              {{ row.status | statusText }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"180\">\r\n          <template slot-scope=\"{row}\">\r\n            <el-button\r\n                v-if=\"row.status !== 1\"\r\n                type=\"success\"\r\n                size=\"mini\"\r\n                @click=\"handleApprove(row.id)\"\r\n            >通过</el-button>\r\n            <el-button\r\n                type=\"danger\"\r\n                size=\"mini\"\r\n                @click=\"handleDelete(row.id)\"\r\n            >删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"pageNum\"\r\n          :page-sizes=\"[10, 20, 30, 50]\"\r\n          :page-size=\"pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          style=\"margin-top: 20px;\"\r\n      />\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {formatDate} from \"@/store/formatDate\";\r\n\r\nexport default {\r\n  filters: {\r\n    statusFilter(status) {\r\n      const statusMap = {\r\n        1: 'success',\r\n        0: 'danger'\r\n      }\r\n      return statusMap[status]\r\n    },\r\n    statusText(status) {\r\n      const statusMap = {\r\n        1: '已通过',\r\n        0: '未通过'\r\n      }\r\n      return statusMap[status]\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      reviewList: [],\r\n      total: 0,\r\n      pageNum: 1,\r\n      pageSize: 10,\r\n      \r\n    }\r\n  },\r\n  created() {\r\n    this.loadReviews()\r\n  },\r\n  methods: {\r\n    async loadReviews() {\r\n      const params = {\r\n        pageNum: this.pageNum,\r\n        pageSize: this.pageSize,\r\n      }\r\n      try {\r\n        const res = await this.$axios.post(\r\n            this.$httpUrl + '/review/list',\r\n            params\r\n        )\r\n        if (res.data.code === 200) {\r\n          this.reviewList = res.data.data\r\n          this.total = res.data.total\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n        this.$message.error('获取评论列表失败')\r\n      }\r\n    },\r\n    formatTime(time) {\r\n      if (!time) return \"暂无时间信息\";\r\n      try {\r\n        const dateStr = typeof time === \"string\" ? time : time.toString();\r\n        return formatDate(new Date(dateStr), \"yyyy-MM-dd hh:mm:ss\");\r\n      } catch (e) {\r\n        console.error(\"时间格式错误:\", time);\r\n        return \"时间格式异常\";\r\n      }\r\n    },\r\n\r\n    resetSearch(){\r\n      this.name=''\r\n      this.storage=''\r\n      this.goodstype=''\r\n    },\r\n\r\n    handleSizeChange(val) {\r\n      this.pageSize = val\r\n      this.loadReviews()\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.pageNum = val\r\n      this.loadReviews()\r\n    },\r\n\r\n    async handleApprove(id) {\r\n      try {\r\n        const res = await this.$axios.post(\r\n            this.$httpUrl + '/review/updateStatus',\r\n            { id, status: 1 }\r\n        )\r\n        if (res.data.code === 200) {\r\n          this.$message.success('审核通过')\r\n          this.loadReviews()\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n        this.$message.error('操作失败')\r\n      }\r\n    },\r\n\r\n    handleDelete(id) {\r\n      this.$confirm('确定删除该评论？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(async () => {\r\n        try {\r\n          const res = await this.$axios.post(\r\n              this.$httpUrl + '/review/delete',\r\n              { id }\r\n          )\r\n          if (res.data.code === 200) {\r\n            this.$message.success('删除成功')\r\n            this.loadReviews()\r\n          }\r\n        } catch (error) {\r\n          console.error(error)\r\n          this.$message.error('删除失败')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-info {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.filter-container {\r\n  margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":"AAmGA,SAAAA,UAAA;AAEA;EACAC,OAAA;IACAC,aAAAC,MAAA;MACA,MAAAC,SAAA;QACA;QACA;MACA;MACA,OAAAA,SAAA,CAAAD,MAAA;IACA;IACAE,WAAAF,MAAA;MACA,MAAAC,SAAA;QACA;QACA;MACA;MACA,OAAAA,SAAA,CAAAD,MAAA;IACA;EACA;EACAG,KAAA;IACA;MACAC,UAAA;MACAC,KAAA;MACAC,OAAA;MACAC,QAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACA,MAAAD,YAAA;MACA,MAAAE,MAAA;QACAL,OAAA,OAAAA,OAAA;QACAC,QAAA,OAAAA;MACA;MACA;QACA,MAAAK,GAAA,cAAAC,MAAA,CAAAC,IAAA,CACA,KAAAC,QAAA,mBACAJ,MACA;QACA,IAAAC,GAAA,CAAAT,IAAA,CAAAa,IAAA;UACA,KAAAZ,UAAA,GAAAQ,GAAA,CAAAT,IAAA,CAAAA,IAAA;UACA,KAAAE,KAAA,GAAAO,GAAA,CAAAT,IAAA,CAAAE,KAAA;QACA;MACA,SAAAY,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;QACA,KAAAE,QAAA,CAAAF,KAAA;MACA;IACA;IACAG,WAAAC,IAAA;MACA,KAAAA,IAAA;MACA;QACA,MAAAC,OAAA,UAAAD,IAAA,gBAAAA,IAAA,GAAAA,IAAA,CAAAE,QAAA;QACA,OAAA1B,UAAA,KAAA2B,IAAA,CAAAF,OAAA;MACA,SAAAG,CAAA;QACAP,OAAA,CAAAD,KAAA,YAAAI,IAAA;QACA;MACA;IACA;IAEAK,YAAA;MACA,KAAAC,IAAA;MACA,KAAAC,OAAA;MACA,KAAAC,SAAA;IACA;IAEAC,iBAAAC,GAAA;MACA,KAAAxB,QAAA,GAAAwB,GAAA;MACA,KAAAtB,WAAA;IACA;IACAuB,oBAAAD,GAAA;MACA,KAAAzB,OAAA,GAAAyB,GAAA;MACA,KAAAtB,WAAA;IACA;IAEA,MAAAwB,cAAAC,EAAA;MACA;QACA,MAAAtB,GAAA,cAAAC,MAAA,CAAAC,IAAA,CACA,KAAAC,QAAA,2BACA;UAAAmB,EAAA;UAAAlC,MAAA;QAAA,CACA;QACA,IAAAY,GAAA,CAAAT,IAAA,CAAAa,IAAA;UACA,KAAAG,QAAA,CAAAgB,OAAA;UACA,KAAA1B,WAAA;QACA;MACA,SAAAQ,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;QACA,KAAAE,QAAA,CAAAF,KAAA;MACA;IACA;IAEAmB,aAAAF,EAAA;MACA,KAAAG,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,IAAA;QACA;UACA,MAAA7B,GAAA,cAAAC,MAAA,CAAAC,IAAA,CACA,KAAAC,QAAA,qBACA;YAAAmB;UAAA,CACA;UACA,IAAAtB,GAAA,CAAAT,IAAA,CAAAa,IAAA;YACA,KAAAG,QAAA,CAAAgB,OAAA;YACA,KAAA1B,WAAA;UACA;QACA,SAAAQ,KAAA;UACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;UACA,KAAAE,QAAA,CAAAF,KAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}