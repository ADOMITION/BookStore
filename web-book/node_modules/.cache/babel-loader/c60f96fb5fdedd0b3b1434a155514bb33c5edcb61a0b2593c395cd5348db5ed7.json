{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { formatDate } from \"@/store/formatDate\";\nexport default {\n  name: 'OrderManage',\n  data() {\n    return {\n      searchParams: {\n        id: null,\n        userId: null,\n        status: null\n      },\n      statusOptions: [{\n        value: '待付款',\n        label: '待付款'\n      }, {\n        value: '已付款',\n        label: '已付款'\n      }, {\n        value: '已完成',\n        label: '已完成'\n      }, {\n        value: '已取消',\n        label: '已取消'\n      }],\n      statusTagType: {\n        '待付款': 'warning',\n        '已付款': 'success',\n        '已完成': 'info',\n        '已取消': 'danger'\n      },\n      orderList: [],\n      currentOrder: {},\n      loading: false,\n      detailVisible: false,\n      pagination: {\n        current: 1,\n        size: 10,\n        total: 0\n      }\n    };\n  },\n  created() {\n    this.loadOrders();\n  },\n  methods: {\n    formatTime(time) {\n      return time ? formatDate(time) : '--';\n    },\n    async loadOrders() {\n      this.loading = true;\n      try {\n        const params = {\n          pageNum: this.pagination.current,\n          pageSize: this.pagination.size,\n          param: this.cleanSearchParams()\n        };\n        const {\n          data\n        } = await this.$axios.post(this.$httpUrl + '/order/page', params);\n        if (data.code === 200) {\n          // 修正数据路径\n          this.orderList = data.data || [];\n          this.pagination.total = data.total || 0;\n        }\n      } catch (error) {\n        console.error(error);\n        this.$message.error('加载订单列表失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    cleanSearchParams() {\n      return Object.fromEntries(Object.entries(this.searchParams).filter(([_, v]) => v !== null && v !== ''));\n    },\n    async cancelOrder(id) {\n      try {\n        const {\n          data\n        } = await this.$axios.post(this.$httpUrl + `/order/acancel/${id}`);\n        if (data.code === 200) {\n          this.$message.success('订单已取消');\n          this.loadOrders();\n        }\n      } catch (error) {\n        this.$message.error(error.response?.data?.msg || '取消订单失败');\n      }\n    },\n    showOrderDetail(order) {\n      this.currentOrder = order;\n      this.detailVisible = true;\n    },\n    handleSizeChange(size) {\n      this.pagination.size = size;\n      this.loadOrders();\n    },\n    handleCurrentChange(current) {\n      this.pagination.current = current;\n      this.loadOrders();\n    },\n    resetSearch() {\n      this.searchParams = {\n        id: null,\n        userId: null,\n        status: null\n      };\n      this.loadOrders();\n    },\n    handleExpand(row, expandedRows) {\n      if (expandedRows.length && !row.items) {\n        this.loadOrderItems(row);\n      }\n    },\n    async loadOrderItems(row) {\n      try {\n        const {\n          data\n        } = await this.$axios.get(this.$httpUrl + `/order/${row.id}/items`);\n        if (data.code === 200) {\n          this.$set(row, 'items', data.data);\n        }\n      } catch (error) {\n        console.error('加载订单商品失败:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["formatDate","name","data","searchParams","id","userId","status","statusOptions","value","label","statusTagType","orderList","currentOrder","loading","detailVisible","pagination","current","size","total","created","loadOrders","methods","formatTime","time","params","pageNum","pageSize","param","cleanSearchParams","$axios","post","$httpUrl","code","error","console","$message","Object","fromEntries","entries","filter","_","v","cancelOrder","success","response","msg","showOrderDetail","order","handleSizeChange","handleCurrentChange","resetSearch","handleExpand","row","expandedRows","length","items","loadOrderItems","get","$set"],"sources":["src/admin/OrderManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-container\">\r\n    <!-- 搜索区域 -->\r\n    <div class=\"filter-card\">\r\n      <div class=\"filter-content\">\r\n        <el-input\r\n            v-model.number=\"searchParams.id\"\r\n            placeholder=\"订单ID\"\r\n            class=\"search-input\"\r\n            clearable\r\n            @keyup.enter.native=\"loadOrders\"\r\n        />\r\n        <el-input\r\n            v-model.number=\"searchParams.userId\"\r\n            placeholder=\"用户ID\"\r\n            class=\"search-input\"\r\n            clearable\r\n            @keyup.enter.native=\"loadOrders\"\r\n        />\r\n        <el-select\r\n            v-model=\"searchParams.status\"\r\n            placeholder=\"订单状态\"\r\n            clearable\r\n            class=\"status-select\"\r\n        >\r\n          <el-option\r\n              v-for=\"item in statusOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\"\r\n          />\r\n        </el-select>\r\n\r\n        <div class=\"operation-group\">\r\n          <el-button\r\n              type=\"primary\"\r\n              class=\"operation-btn gradient-blue\"\r\n              @click=\"loadOrders\"\r\n          >\r\n            <i class=\"el-icon-search\"></i>查询\r\n          </el-button>\r\n          <el-button\r\n              class=\"operation-btn reset-btn\"\r\n              @click=\"resetSearch\"\r\n          >\r\n            <i class=\"el-icon-refresh-left\"></i>重置\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 表格区域 -->\r\n    <div class=\"table-card\">\r\n      <el-table\r\n          :data=\"orderList\"\r\n          v-loading=\"loading\"\r\n          element-loading-spinner=\"el-icon-loading\"\r\n          style=\"width: 100%\"\r\n          header-row-class-name=\"table-header\"\r\n          stripe\r\n          @expand-change=\"handleExpand\"\r\n      >\r\n        <el-table-column type=\"expand\">\r\n          <template slot-scope=\"props\">\r\n            <div class=\"sub-table-container\">\r\n              <el-table\r\n                  :data=\"props.row.items\"\r\n                  border\r\n                  class=\"sub-table\"\r\n              >\r\n                <el-table-column prop=\"book.name\" label=\"图书名称\" />\r\n                <el-table-column prop=\"quantity\" label=\"数量\" width=\"100\" align=\"center\" />\r\n                <el-table-column prop=\"price\" label=\"单价\" width=\"120\" align=\"right\">\r\n                  <template slot-scope=\"{row}\">\r\n                    ¥{{ row.price.toFixed(2) }}\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"小计\" width=\"140\" align=\"right\">\r\n                  <template slot-scope=\"{row}\">\r\n                    ¥{{ (row.quantity * row.price).toFixed(2) }}\r\n                  </template>\r\n                </el-table-column>\r\n              </el-table>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column prop=\"id\" label=\"订单号\" width=\"180\" />\r\n        <el-table-column prop=\"userId\" label=\"用户ID\" width=\"120\" align=\"center\" />\r\n        <el-table-column prop=\"totalAmount\" label=\"总金额\" width=\"140\" align=\"right\">\r\n          <template slot-scope=\"{row}\">\r\n            ¥{{ row.totalAmount.toFixed(2) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"status\" label=\"订单状态\" width=\"150\">\r\n          <template slot-scope=\"{row}\">\r\n            <el-tag :type=\"statusTagType[row.status]\">\r\n              {{ row.status }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"createtime\" label=\"创建时间\" width=\"180\">\r\n          <template slot-scope=\"{row}\">\r\n            {{ formatTime(row.createtime) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"recipient\" label=\"收件人\" width=\"120\" />\r\n        <el-table-column prop=\"tel\" label=\"联系方式\" width=\"150\" />\r\n        <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n                size=\"mini\"\r\n                type=\"text\"\r\n                class=\"detail-btn\"\r\n                @click=\"showOrderDetail(scope.row)\"\r\n            >\r\n              <i class=\"el-icon-document\"></i>详情\r\n            </el-button>\r\n            <el-popconfirm\r\n                title=\"确定要取消此订单吗？\"\r\n                @confirm=\"cancelOrder(scope.row.id)\"\r\n                v-if=\"scope.row.status === '待付款'\"\r\n            >\r\n              <el-button\r\n                  slot=\"reference\"\r\n                  size=\"mini\"\r\n                  type=\"text\"\r\n                  class=\"cancel-btn\"\r\n              >\r\n                <i class=\"el-icon-close\"></i>取消\r\n              </el-button>\r\n            </el-popconfirm>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <el-pagination\r\n          background\r\n          :current-page=\"pagination.current\"\r\n          :page-sizes=\"[5, 10, 20, 50]\"\r\n          :page-size=\"pagination.size\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"pagination.total\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          class=\"pagination\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 订单详情对话框 -->\r\n    <el-dialog\r\n        :title=\"`订单详情 - #${currentOrder.id}`\"\r\n        :visible.sync=\"detailVisible\"\r\n        width=\"800px\"\r\n        class=\"order-dialog\"\r\n    >\r\n      <el-descriptions :column=\"2\" border>\r\n        <el-descriptions-item label=\"订单状态\">\r\n          <el-tag :type=\"statusTagType[currentOrder.status]\">\r\n            {{ currentOrder.status }}\r\n          </el-tag>\r\n        </el-descriptions-item>\r\n        <el-descriptions-item label=\"总金额\">\r\n          ¥{{ currentOrder.totalAmount?.toFixed(2) }}\r\n        </el-descriptions-item>\r\n        <el-descriptions-item label=\"创建时间\">\r\n          {{ formatTime(currentOrder.createtime) }}\r\n        </el-descriptions-item>\r\n        <el-descriptions-item label=\"支付时间\">\r\n          {{ currentOrder.payTime ? formatTime(currentOrder.payTime) : '--' }}\r\n        </el-descriptions-item>\r\n        <el-descriptions-item label=\"收件地址\" span=\"2\">\r\n          {{ currentOrder.address }}\r\n        </el-descriptions-item>\r\n        <el-descriptions-item label=\"收件人\">\r\n          {{ currentOrder.recipient }}（{{ currentOrder.tel }}）\r\n        </el-descriptions-item>\r\n      </el-descriptions>\r\n\r\n      <el-divider content-position=\"left\">商品明细</el-divider>\r\n      <el-table :data=\"currentOrder.items\" border>\r\n        <el-table-column prop=\"book.name\" label=\"图书名称\" />\r\n        <el-table-column prop=\"price\" label=\"单价\" width=\"120\" align=\"right\">\r\n          <template slot-scope=\"{row}\">¥{{ row.price.toFixed(2) }}</template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"quantity\" label=\"数量\" width=\"100\" align=\"center\" />\r\n        <el-table-column label=\"小计\" width=\"140\" align=\"right\">\r\n          <template slot-scope=\"{row}\">\r\n            ¥{{ (row.price * row.quantity).toFixed(2) }}\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {formatDate} from \"@/store/formatDate\";\r\n\r\nexport default {\r\n  name: 'OrderManage',\r\n  data() {\r\n    return {\r\n      searchParams: {\r\n        id: null,\r\n        userId: null,\r\n        status: null\r\n      },\r\n      statusOptions: [\r\n        { value: '待付款', label: '待付款' },\r\n        { value: '已付款', label: '已付款' },\r\n        { value: '已完成', label: '已完成' },\r\n        { value: '已取消', label: '已取消' }\r\n      ],\r\n      statusTagType: {\r\n        '待付款': 'warning',\r\n        '已付款': 'success',\r\n        '已完成': 'info',\r\n        '已取消': 'danger'\r\n      },\r\n      orderList: [],\r\n      currentOrder: {},\r\n      loading: false,\r\n      detailVisible: false,\r\n      pagination: {\r\n        current: 1,\r\n        size: 10,\r\n        total: 0\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadOrders()\r\n  },\r\n  methods: {\r\n    formatTime(time) {\r\n      return time ? formatDate(time) : '--'\r\n    },\r\n    async loadOrders() {\r\n      this.loading = true\r\n      try {\r\n        const params = {\r\n          pageNum: this.pagination.current,\r\n          pageSize: this.pagination.size,\r\n          param: this.cleanSearchParams()\r\n        }\r\n        const { data } = await this.$axios.post(this.$httpUrl+'/order/page', params)\r\n        if (data.code === 200) {\r\n          // 修正数据路径\r\n          this.orderList = data.data || []\r\n          this.pagination.total = data.total || 0\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n        this.$message.error('加载订单列表失败')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    cleanSearchParams() {\r\n      return Object.fromEntries(\r\n          Object.entries(this.searchParams).filter(([_, v]) => v !== null && v !== '')\r\n      )\r\n    },\r\n    async cancelOrder(id) {\r\n      try {\r\n        const { data } = await this.$axios.post(this.$httpUrl+`/order/acancel/${id}`)\r\n        if (data.code === 200) {\r\n          this.$message.success('订单已取消')\r\n          this.loadOrders()\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(error.response?.data?.msg || '取消订单失败')\r\n      }\r\n    },\r\n    showOrderDetail(order) {\r\n      this.currentOrder = order\r\n      this.detailVisible = true\r\n    },\r\n    handleSizeChange(size) {\r\n      this.pagination.size = size\r\n      this.loadOrders()\r\n    },\r\n    handleCurrentChange(current) {\r\n      this.pagination.current = current\r\n      this.loadOrders()\r\n    },\r\n    resetSearch() {\r\n      this.searchParams = { id: null, userId: null, status: null }\r\n      this.loadOrders()\r\n    },\r\n    handleExpand(row, expandedRows) {\r\n      if (expandedRows.length && !row.items) {\r\n        this.loadOrderItems(row)\r\n      }\r\n    },\r\n    async loadOrderItems(row) {\r\n      try {\r\n        const { data } = await this.$axios.get(this.$httpUrl+`/order/${row.id}/items`)\r\n        if (data.code === 200) {\r\n          this.$set(row, 'items', data.data)\r\n        }\r\n      } catch (error) {\r\n        console.error('加载订单商品失败:', error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.order-container {\r\n  padding: 20px;\r\n  background: #f5f7fa;\r\n  min-height: calc(100vh - 84px);\r\n\r\n  .filter-card {\r\n    background: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 12px rgba(0,0,0,0.05);\r\n    margin-bottom: 20px;\r\n    padding: 20px;\r\n\r\n    .filter-content {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 15px;\r\n      flex-wrap: wrap;\r\n\r\n      .search-input {\r\n        width: 200px;\r\n      }\r\n\r\n      .status-select {\r\n        width: 150px;\r\n      }\r\n\r\n      .operation-group {\r\n        margin-left: auto;\r\n        display: flex;\r\n        gap: 10px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .table-card {\r\n    background: #fff;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 12px rgba(0,0,0,0.05);\r\n    padding: 20px;\r\n\r\n    .sub-table-container {\r\n      margin: 10px 0 10px 50px;\r\n\r\n      .sub-table {\r\n        width: calc(100% - 50px);\r\n\r\n        ::v-deep .el-table__header-wrapper {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n\r\n    .pagination {\r\n      margin-top: 20px;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n    }\r\n  }\r\n\r\n  .order-dialog {\r\n    ::v-deep .el-dialog__header {\r\n      border-bottom: 1px solid #ebeef5;\r\n      padding: 15px 20px;\r\n    }\r\n\r\n    ::v-deep .el-descriptions__body {\r\n      background: #f8f9fa;\r\n    }\r\n\r\n    .el-divider__text {\r\n      background: #f8f9fa;\r\n      font-weight: 500;\r\n    }\r\n  }\r\n\r\n  .detail-btn {\r\n    color: #409EFF;\r\n\r\n    &:hover {\r\n      color: #3375e0;\r\n    }\r\n  }\r\n\r\n  .cancel-btn {\r\n    color: #f56c6c;\r\n\r\n    &:hover {\r\n      color: #e64340;\r\n    }\r\n  }\r\n}\r\n</style>"],"mappings":";;AAsMA,SAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;QACAC,EAAA;QACAC,MAAA;QACAC,MAAA;MACA;MACAC,aAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAC,aAAA;QACA;QACA;QACA;QACA;MACA;MACAC,SAAA;MACAC,YAAA;MACAC,OAAA;MACAC,aAAA;MACAC,UAAA;QACAC,OAAA;QACAC,IAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACAC,WAAAC,IAAA;MACA,OAAAA,IAAA,GAAAvB,UAAA,CAAAuB,IAAA;IACA;IACA,MAAAH,WAAA;MACA,KAAAP,OAAA;MACA;QACA,MAAAW,MAAA;UACAC,OAAA,OAAAV,UAAA,CAAAC,OAAA;UACAU,QAAA,OAAAX,UAAA,CAAAE,IAAA;UACAU,KAAA,OAAAC,iBAAA;QACA;QACA;UAAA1B;QAAA,eAAA2B,MAAA,CAAAC,IAAA,MAAAC,QAAA,kBAAAP,MAAA;QACA,IAAAtB,IAAA,CAAA8B,IAAA;UACA;UACA,KAAArB,SAAA,GAAAT,IAAA,CAAAA,IAAA;UACA,KAAAa,UAAA,CAAAG,KAAA,GAAAhB,IAAA,CAAAgB,KAAA;QACA;MACA,SAAAe,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;QACA,KAAAE,QAAA,CAAAF,KAAA;MACA;QACA,KAAApB,OAAA;MACA;IACA;IACAe,kBAAA;MACA,OAAAQ,MAAA,CAAAC,WAAA,CACAD,MAAA,CAAAE,OAAA,MAAAnC,YAAA,EAAAoC,MAAA,GAAAC,CAAA,EAAAC,CAAA,MAAAA,CAAA,aAAAA,CAAA,QACA;IACA;IACA,MAAAC,YAAAtC,EAAA;MACA;QACA;UAAAF;QAAA,eAAA2B,MAAA,CAAAC,IAAA,MAAAC,QAAA,qBAAA3B,EAAA;QACA,IAAAF,IAAA,CAAA8B,IAAA;UACA,KAAAG,QAAA,CAAAQ,OAAA;UACA,KAAAvB,UAAA;QACA;MACA,SAAAa,KAAA;QACA,KAAAE,QAAA,CAAAF,KAAA,CAAAA,KAAA,CAAAW,QAAA,EAAA1C,IAAA,EAAA2C,GAAA;MACA;IACA;IACAC,gBAAAC,KAAA;MACA,KAAAnC,YAAA,GAAAmC,KAAA;MACA,KAAAjC,aAAA;IACA;IACAkC,iBAAA/B,IAAA;MACA,KAAAF,UAAA,CAAAE,IAAA,GAAAA,IAAA;MACA,KAAAG,UAAA;IACA;IACA6B,oBAAAjC,OAAA;MACA,KAAAD,UAAA,CAAAC,OAAA,GAAAA,OAAA;MACA,KAAAI,UAAA;IACA;IACA8B,YAAA;MACA,KAAA/C,YAAA;QAAAC,EAAA;QAAAC,MAAA;QAAAC,MAAA;MAAA;MACA,KAAAc,UAAA;IACA;IACA+B,aAAAC,GAAA,EAAAC,YAAA;MACA,IAAAA,YAAA,CAAAC,MAAA,KAAAF,GAAA,CAAAG,KAAA;QACA,KAAAC,cAAA,CAAAJ,GAAA;MACA;IACA;IACA,MAAAI,eAAAJ,GAAA;MACA;QACA;UAAAlD;QAAA,eAAA2B,MAAA,CAAA4B,GAAA,MAAA1B,QAAA,aAAAqB,GAAA,CAAAhD,EAAA;QACA,IAAAF,IAAA,CAAA8B,IAAA;UACA,KAAA0B,IAAA,CAAAN,GAAA,WAAAlD,IAAA,CAAAA,IAAA;QACA;MACA,SAAA+B,KAAA;QACAC,OAAA,CAAAD,KAAA,cAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}