{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  name: \"NavBar\",\n  data() {\n    return {\n      bean: [],\n      loading: true\n    };\n  },\n  computed: {\n    // 数据预处理\n    processedData() {\n      return this.bean.map(category => ({\n        ...category,\n        // 过滤空数据并处理评分显示\n        books: (category.books || []).map(book => ({\n          ...book,\n          mark: (book.mark || 0).toFixed(1) // 保留1位小数\n        })).filter(book => book.id) // 过滤无效数据\n      })).filter(category => category.books.length > 0); // 过滤空分类\n    }\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      try {\n        const res = await this.$axios.get(this.$httpUrl + '/book/preview');\n        if (res.data.code === 200) {\n          this.bean = res.data.data;\n        } else {\n          this.$message.error('数据加载失败');\n        }\n      } catch (error) {\n        this.$message.error('网络请求异常');\n      } finally {\n        this.loading = false;\n      }\n    }\n    // 保持原有方法...\n  }\n};","map":{"version":3,"names":["name","data","bean","loading","computed","processedData","map","category","books","book","mark","toFixed","filter","id","length","created","fetchData","methods","res","$axios","get","$httpUrl","code","$message","error"],"sources":["src/user/home/NvaBar.vue"],"sourcesContent":["<template>\r\n  <div v-loading=\"loading\">\r\n    <el-row\r\n        v-for=\"(row, index) in processedData\"\r\n        :key=\"index\"\r\n        style=\"text-align: center; margin: 0 20%\"\r\n        :gutter=\"20\">\r\n\r\n      <el-col :span=\"24\">\r\n        <h3>\r\n          {{ row.name }}\r\n          <el-button\r\n              type=\"info\"\r\n              icon=\"el-icon-arrow-right\"\r\n              size=\"mini\"\r\n              @click=\"handleMore(row.id)\"\r\n          />\r\n        </h3>\r\n      </el-col>\r\n\r\n      <el-col\r\n          v-for=\"(item, idx) in row.books\"\r\n          :key=\"idx\"\r\n          :span=\"6\"\r\n          style=\"margin-bottom: 20px;\">\r\n\r\n        <el-card\r\n            :body-style=\"{ padding: '0px' }\"\r\n            style=\"width: 195px; cursor: pointer;\"\r\n            shadow=\"hover\"\r\n            @click.native=\"handleSkip(item.id)\">\r\n\r\n          <el-image\r\n              :src=\"item.image\"\r\n              style=\"height: 276px; width: 195px\"\r\n              fit=\"cover\">\r\n            <div slot=\"error\" class=\"image-slot\">\r\n              <i class=\"el-icon-picture-outline\"></i>\r\n            </div>\r\n          </el-image>\r\n\r\n          <div style=\"padding: 10px;\">\r\n            <p class=\"book-title\">{{ item.name }}</p>\r\n            <p class=\"book-author\">{{ item.author }}</p>\r\n            <div class=\"price-rating\">\r\n              <span class=\"price\">¥{{ item.price }}</span>\r\n              <el-rate\r\n                  v-model=\"item.mark\"\r\n                  :max=\"10\"\r\n                  :disabled=\"true\"\r\n                  :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\"\r\n                  show-score\r\n                  score-template=\"{value} 分\"\r\n                  style=\"display: inline-block; margin-left: 10px;\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"NavBar\",\r\n  data() {\r\n    return {\r\n      bean: [],\r\n      loading: true,\r\n    };\r\n  },\r\n  computed: {\r\n    // 数据预处理\r\n    processedData() {\r\n      return this.bean.map(category => ({\r\n        ...category,\r\n        // 过滤空数据并处理评分显示\r\n        books: (category.books || []).map(book => ({\r\n          ...book,\r\n          mark: (book.mark || 0).toFixed(1) // 保留1位小数\r\n        })).filter(book => book.id) // 过滤无效数据\r\n      })).filter(category => category.books.length > 0); // 过滤空分类\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData();\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      try {\r\n        const res = await this.$axios.get(this.$httpUrl+'/book/preview');\r\n        if (res.data.code === 200) {\r\n          this.bean = res.data.data;\r\n        } else {\r\n          this.$message.error('数据加载失败');\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('网络请求异常');\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    // 保持原有方法...\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.book-title {\r\n  font-size: 14px;\r\n  margin: 5px 0;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.book-author {\r\n  color: #999;\r\n  font-size: 12px;\r\n  margin: 5px 0;\r\n}\r\n\r\n.price-rating {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n}\r\n\r\n.price {\r\n  color: #ff4443;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.image-slot {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #f5f7fa;\r\n  color: #909399;\r\n  font-size: 30px;\r\n}\r\n</style>"],"mappings":";;;AAgEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,cAAA;MACA,YAAAH,IAAA,CAAAI,GAAA,CAAAC,QAAA;QACA,GAAAA,QAAA;QACA;QACAC,KAAA,GAAAD,QAAA,CAAAC,KAAA,QAAAF,GAAA,CAAAG,IAAA;UACA,GAAAA,IAAA;UACAC,IAAA,GAAAD,IAAA,CAAAC,IAAA,OAAAC,OAAA;QACA,IAAAC,MAAA,CAAAH,IAAA,IAAAA,IAAA,CAAAI,EAAA;MACA,IAAAD,MAAA,CAAAL,QAAA,IAAAA,QAAA,CAAAC,KAAA,CAAAM,MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACA,MAAAD,UAAA;MACA;QACA,MAAAE,GAAA,cAAAC,MAAA,CAAAC,GAAA,MAAAC,QAAA;QACA,IAAAH,GAAA,CAAAjB,IAAA,CAAAqB,IAAA;UACA,KAAApB,IAAA,GAAAgB,GAAA,CAAAjB,IAAA,CAAAA,IAAA;QACA;UACA,KAAAsB,QAAA,CAAAC,KAAA;QACA;MACA,SAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;QACA,KAAArB,OAAA;MACA;IACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}