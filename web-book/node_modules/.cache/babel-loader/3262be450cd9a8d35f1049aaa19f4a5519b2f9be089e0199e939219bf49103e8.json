{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"SearchPage\",\n  data() {\n    return {\n      beans: [],\n      total: 0,\n      pageNum: 1,\n      pageSize: 12,\n      searchTime: 0\n    };\n  },\n  created() {\n    this.refresh();\n  },\n  watch: {\n    '$route'() {\n      this.refresh();\n    }\n  },\n  methods: {\n    async refresh() {\n      const startTime = Date.now();\n      const params = {\n        pageNum: this.pageNum,\n        pageSize: this.pageSize,\n        param: {\n          keyword: this.$route.query.keyword\n        }\n      };\n      try {\n        const res = await this.axios.post(this.$httpUrl + '/book/search', params);\n        this.beans = res.data.records;\n        this.total = res.data.total;\n        this.searchTime = (Date.now() - startTime) / 1000;\n      } catch (error) {\n        this.$message.error('搜索失败，请稍后重试');\n      }\n    },\n    handlePageChange(page) {\n      this.pageNum = page;\n      this.refresh();\n    },\n    handleSizeChange(size) {\n      this.pageSize = size;\n      this.refresh();\n    },\n    handleSkip(id) {\n      this.$router.push({\n        path: '/product',\n        query: {\n          id\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","beans","total","pageNum","pageSize","searchTime","created","refresh","watch","$route","methods","startTime","Date","now","params","param","keyword","query","res","axios","post","$httpUrl","records","error","$message","handlePageChange","page","handleSizeChange","size","handleSkip","id","$router","push","path"],"sources":["src/user/home/SearchPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"search-container\">\r\n    <!-- 搜索结果统计 -->\r\n    <div class=\"search-stats\">\r\n      <el-tag type=\"info\">\r\n        共找到 {{ total }} 条结果，耗时 {{ searchTime }} 秒\r\n      </el-tag>\r\n    </div>\r\n\r\n    <!-- 无结果提示 -->\r\n    <el-empty\r\n        v-if=\"beans.length === 0\"\r\n        description=\"没有找到相关书籍，建议您：\"\r\n        image=\"/empty.png\"\r\n    >\r\n      <ul class=\"suggestions\">\r\n        <li>检查输入的关键词是否有误</li>\r\n        <li>尝试更简短的关键词</li>\r\n        <li>使用作者名或出版社搜索</li>\r\n      </ul>\r\n    </el-empty>\r\n\r\n    <!-- 搜索结果列表 -->\r\n    <el-row\r\n        v-else\r\n        :gutter=\"20\"\r\n        class=\"book-list\"\r\n    >\r\n      <el-col\r\n          v-for=\"item in beans\"\r\n          :key=\"item.id\"\r\n          :xs=\"12\" :sm=\"8\" :md=\"6\" :lg=\"4\" :xl=\"3\"\r\n          class=\"book-item\"\r\n      >\r\n        <el-card\r\n            shadow=\"hover\"\r\n            class=\"book-card\"\r\n            @click.native=\"handleSkip(item.id)\"\r\n        >\r\n          <div class=\"image-wrapper\">\r\n            <el-image\r\n                :src=\"item.url\"\r\n                :alt=\"item.name\"\r\n                fit=\"contain\"\r\n                lazy\r\n            >\r\n              <div slot=\"error\" class=\"image-error\">\r\n                <i class=\"el-icon-picture-outline\"></i>\r\n              </div>\r\n            </el-image>\r\n          </div>\r\n          <div class=\"book-info\">\r\n            <h3 class=\"title\">{{ item.name }}</h3>\r\n            <p class=\"author\">{{ item.author }}</p>\r\n            <div class=\"meta\">\r\n              <span class=\"price\">¥{{ item.price.toFixed(2) }}</span>\r\n              <el-rate\r\n                  v-model=\"item.mark\"\r\n                  disabled\r\n                  :colors=\"['#ff6b6b', '#ff6b6b', '#ff6b6b']\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 分页组件 -->\r\n    <el-pagination\r\n        v-if=\"total > 0\"\r\n        background\r\n        layout=\"prev, pager, next, jumper, sizes, total\"\r\n        :page-sizes=\"[12, 24, 48, 96]\"\r\n        :current-page=\"pageNum\"\r\n        :page-size=\"pageSize\"\r\n        :total=\"total\"\r\n        @current-change=\"handlePageChange\"\r\n        @size-change=\"handleSizeChange\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"SearchPage\",\r\n  data() {\r\n    return {\r\n      beans: [],\r\n      total: 0,\r\n      pageNum: 1,\r\n      pageSize: 12,\r\n      searchTime: 0\r\n    }\r\n  },\r\n  created() {\r\n    this.refresh();\r\n  },\r\n  watch: {\r\n    '$route'() {\r\n      this.refresh();\r\n    }\r\n  },\r\n  methods: {\r\n    async refresh() {\r\n      const startTime = Date.now();\r\n      const params = {\r\n        pageNum: this.pageNum,\r\n        pageSize: this.pageSize,\r\n        param: {\r\n          keyword: this.$route.query.keyword\r\n        }\r\n      };\r\n\r\n      try {\r\n        const res = await this.axios.post(this.$httpUrl+'/book/search', params);\r\n        this.beans = res.data.records;\r\n        this.total = res.data.total;\r\n        this.searchTime = (Date.now() - startTime) / 1000;\r\n      } catch (error) {\r\n        this.$message.error('搜索失败，请稍后重试');\r\n      }\r\n    },\r\n    handlePageChange(page) {\r\n      this.pageNum = page;\r\n      this.refresh();\r\n    },\r\n    handleSizeChange(size) {\r\n      this.pageSize = size;\r\n      this.refresh();\r\n    },\r\n    handleSkip(id) {\r\n      this.$router.push({\r\n        path: '/product',\r\n        query: {id}\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.search-container {\r\n  max-width: 1200px;\r\n  margin: 20px auto;\r\n  padding: 0 20px;\r\n}\r\n\r\n.search-stats {\r\n  margin: 20px 0;\r\n  text-align: center;\r\n}\r\n\r\n.book-list {\r\n  margin: 0 -10px;\r\n}\r\n\r\n.book-item {\r\n  padding: 10px;\r\n}\r\n\r\n.book-card {\r\n  cursor: pointer;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.book-card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.image-wrapper {\r\n  height: 200px;\r\n  background: #f5f7fa;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.image-error {\r\n  font-size: 40px;\r\n  color: #dcdfe6;\r\n}\r\n\r\n.book-info {\r\n  padding: 15px;\r\n}\r\n\r\n.title {\r\n  font-size: 14px;\r\n  height: 40px;\r\n  line-height: 1.4;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n}\r\n\r\n.author {\r\n  color: #909399;\r\n  font-size: 12px;\r\n  margin: 8px 0;\r\n}\r\n\r\n.meta {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.price {\r\n  color: #ff6b6b;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.el-pagination {\r\n  margin: 30px 0;\r\n  justify-content: center;\r\n}\r\n\r\n.suggestions {\r\n  text-align: left;\r\n  color: #606266;\r\n  line-height: 1.8;\r\n  padding-left: 20px;\r\n}\r\n</style>"],"mappings":";AAmFA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,KAAA;MACAC,OAAA;MACAC,QAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,KAAA;IACA,QAAAC,CAAA;MACA,KAAAF,OAAA;IACA;EACA;EACAG,OAAA;IACA,MAAAH,QAAA;MACA,MAAAI,SAAA,GAAAC,IAAA,CAAAC,GAAA;MACA,MAAAC,MAAA;QACAX,OAAA,OAAAA,OAAA;QACAC,QAAA,OAAAA,QAAA;QACAW,KAAA;UACAC,OAAA,OAAAP,MAAA,CAAAQ,KAAA,CAAAD;QACA;MACA;MAEA;QACA,MAAAE,GAAA,cAAAC,KAAA,CAAAC,IAAA,MAAAC,QAAA,mBAAAP,MAAA;QACA,KAAAb,KAAA,GAAAiB,GAAA,CAAAlB,IAAA,CAAAsB,OAAA;QACA,KAAApB,KAAA,GAAAgB,GAAA,CAAAlB,IAAA,CAAAE,KAAA;QACA,KAAAG,UAAA,IAAAO,IAAA,CAAAC,GAAA,KAAAF,SAAA;MACA,SAAAY,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IACAE,iBAAAC,IAAA;MACA,KAAAvB,OAAA,GAAAuB,IAAA;MACA,KAAAnB,OAAA;IACA;IACAoB,iBAAAC,IAAA;MACA,KAAAxB,QAAA,GAAAwB,IAAA;MACA,KAAArB,OAAA;IACA;IACAsB,WAAAC,EAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QACAC,IAAA;QACAhB,KAAA;UAAAa;QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}