{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport DateUtils from \"./DateUtils.vue\";\nimport * as echarts from 'echarts';\nexport default {\n  name: \"Home\",\n  components: {\n    DateUtils\n  },\n  data() {\n    return {\n      user: {},\n      statistics: {\n        totalBooks: 0,\n        monthlySales: 0,\n        totalUsers: 0,\n        monthlyIncome: 0\n      },\n      charts: {\n        salesChart: null,\n        categoryChart: null,\n        topBooksChart: null,\n        userGrowthChart: null\n      }\n    };\n  },\n  methods: {\n    init() {\n      this.user = JSON.parse(sessionStorage.getItem('CurUser')) || {};\n      this.fetchStatistics();\n      this.initCharts();\n    },\n    async fetchStatistics() {\n      try {\n        // 模拟数据\n        this.statistics = {\n          totalBooks: 12568,\n          monthlySales: 3289,\n          totalUsers: 8765,\n          monthlyIncome: 98765\n        };\n\n        // 更新销售趋势图\n        this.charts.salesChart.setOption({\n          xAxis: {\n            data: ['1月', '2月', '3月', '4月', '5月', '6月']\n          },\n          series: [{\n            name: '销售额',\n            data: [45600, 58900, 67800, 76500, 89200, 98765]\n          }, {\n            name: '销量',\n            data: [1200, 1580, 1890, 2100, 2450, 3289]\n          }]\n        });\n\n        // 更新图书分类占比\n        this.charts.categoryChart.setOption({\n          series: [{\n            data: [{\n              value: 35,\n              name: '文学小说'\n            }, {\n              value: 25,\n              name: '教育考试'\n            }, {\n              value: 20,\n              name: '经济管理'\n            }, {\n              value: 15,\n              name: '科技计算机'\n            }, {\n              value: 5,\n              name: '其他'\n            }]\n          }]\n        });\n\n        // 更新热门图书TOP5\n        this.charts.topBooksChart.setOption({\n          yAxis: {\n            data: ['三体', '活着', '百年孤独', '围城', '平凡的世界']\n          },\n          series: [{\n            data: [320, 280, 250, 220, 200]\n          }]\n        });\n\n        // 更新会员增长趋势\n        this.charts.userGrowthChart.setOption({\n          series: [{\n            data: [150, 230, 224, 218, 135, 147]\n          }]\n        });\n\n        // 实际API调用（暂时注释）\n        // const { data: res } = await this.$axios.get(this.$httpUrl + '/statistics/dashboard')\n        // if (res.code === 200) {\n        //   this.statistics = res.data\n        // }\n      } catch (error) {\n        console.error('获取统计数据失败:', error);\n        this.$message.error('获取统计数据失败');\n      }\n    },\n    initCharts() {\n      this.$nextTick(() => {\n        this.initSalesChart();\n        this.initCategoryChart();\n        this.initTopBooksChart();\n        this.initUserGrowthChart();\n      });\n    },\n    initSalesChart() {\n      this.charts.salesChart = echarts.init(this.$refs.salesChart);\n      const option = {\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['销售额', '销量']\n        },\n        xAxis: {\n          type: 'category',\n          data: ['1月', '2月', '3月', '4月', '5月', '6月']\n        },\n        yAxis: [{\n          type: 'value',\n          name: '销售额',\n          axisLabel: {\n            formatter: '¥{value}'\n          }\n        }, {\n          type: 'value',\n          name: '销量',\n          axisLabel: {\n            formatter: '{value}本'\n          }\n        }],\n        series: [{\n          name: '销售额',\n          type: 'line',\n          smooth: true,\n          data: [12000, 15000, 18000, 16000, 20000, 22000],\n          itemStyle: {\n            color: '#8B4513'\n          }\n        }, {\n          name: '销量',\n          type: 'bar',\n          yAxisIndex: 1,\n          data: [120, 150, 180, 160, 200, 220],\n          itemStyle: {\n            color: '#A0522D'\n          }\n        }]\n      };\n      this.charts.salesChart.setOption(option);\n    },\n    initCategoryChart() {\n      this.charts.categoryChart = echarts.init(this.$refs.categoryChart);\n      const option = {\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [{\n          type: 'pie',\n          radius: '50%',\n          data: [{\n            value: 35,\n            name: '文学小说'\n          }, {\n            value: 25,\n            name: '教育考试'\n          }, {\n            value: 20,\n            name: '经济管理'\n          }, {\n            value: 15,\n            name: '科技计算机'\n          }, {\n            value: 5,\n            name: '其他'\n          }],\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      this.charts.categoryChart.setOption(option);\n    },\n    initTopBooksChart() {\n      this.charts.topBooksChart = echarts.init(this.$refs.topBooksChart);\n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value'\n        },\n        yAxis: {\n          type: 'category',\n          data: ['三体', '活着', '百年孤独', '围城', '平凡的世界']\n        },\n        series: [{\n          name: '销量',\n          type: 'bar',\n          data: [320, 280, 250, 220, 200],\n          itemStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\n              offset: 0,\n              color: '#8B4513'\n            }, {\n              offset: 1,\n              color: '#A0522D'\n            }])\n          }\n        }]\n      };\n      this.charts.topBooksChart.setOption(option);\n    },\n    initUserGrowthChart() {\n      this.charts.userGrowthChart = echarts.init(this.$refs.userGrowthChart);\n      const option = {\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: ['1月', '2月', '3月', '4月', '5月', '6月']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: [150, 230, 224, 218, 135, 147],\n          type: 'line',\n          smooth: true,\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgba(139, 69, 19, 0.5)'\n            }, {\n              offset: 1,\n              color: 'rgba(139, 69, 19, 0.1)'\n            }])\n          },\n          itemStyle: {\n            color: '#8B4513'\n          }\n        }]\n      };\n      this.charts.userGrowthChart.setOption(option);\n    }\n  },\n  mounted() {\n    window.addEventListener('resize', () => {\n      Object.values(this.charts).forEach(chart => {\n        chart && chart.resize();\n      });\n    });\n  },\n  beforeDestroy() {\n    Object.values(this.charts).forEach(chart => {\n      chart && chart.dispose();\n    });\n    window.removeEventListener('resize', this.handleResize);\n  }\n};","map":{"version":3,"names":["DateUtils","echarts","name","components","data","user","statistics","totalBooks","monthlySales","totalUsers","monthlyIncome","charts","salesChart","categoryChart","topBooksChart","userGrowthChart","methods","init","JSON","parse","sessionStorage","getItem","fetchStatistics","initCharts","setOption","xAxis","series","value","yAxis","error","console","$message","$nextTick","initSalesChart","initCategoryChart","initTopBooksChart","initUserGrowthChart","$refs","option","tooltip","trigger","legend","type","axisLabel","formatter","smooth","itemStyle","color","yAxisIndex","orient","left","radius","emphasis","shadowBlur","shadowOffsetX","shadowColor","axisPointer","grid","right","bottom","containLabel","graphic","LinearGradient","offset","areaStyle","mounted","window","addEventListener","Object","values","forEach","chart","resize","beforeDestroy","dispose","removeEventListener","handleResize"],"sources":["src/admin/HomePage.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-container\">\r\n    <div class=\"welcome-card\">\r\n      <h1 class=\"welcome-title\">{{ '欢迎回来，' + user.name + '！' }}</h1>\r\n    </div>\r\n\r\n    <!-- 数据概览卡片 -->\r\n    <div class=\"stat-cards\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\" class=\"stat-card\">\r\n            <div class=\"stat-icon\">\r\n              <i class=\"el-icon-reading\"></i>\r\n            </div>\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-title\">总图书数</div>\r\n              <div class=\"stat-value\">{{ statistics.totalBooks }}</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\" class=\"stat-card\">\r\n            <div class=\"stat-icon\">\r\n              <i class=\"el-icon-shopping-cart-full\"></i>\r\n            </div>\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-title\">本月销量</div>\r\n              <div class=\"stat-value\">{{ statistics.monthlySales }}</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\" class=\"stat-card\">\r\n            <div class=\"stat-icon\">\r\n              <i class=\"el-icon-user\"></i>\r\n            </div>\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-title\">会员总数</div>\r\n              <div class=\"stat-value\">{{ statistics.totalUsers }}</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-card shadow=\"hover\" class=\"stat-card\">\r\n            <div class=\"stat-icon\">\r\n              <i class=\"el-icon-money\"></i>\r\n            </div>\r\n            <div class=\"stat-info\">\r\n              <div class=\"stat-title\">本月收入</div>\r\n              <div class=\"stat-value\">¥{{ statistics.monthlyIncome }}</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n\r\n    <!-- 图表区域 -->\r\n    <div class=\"charts-container\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"16\">\r\n          <el-card class=\"chart-card\">\r\n            <div slot=\"header\">\r\n              <span>销售趋势</span>\r\n            </div>\r\n            <div ref=\"salesChart\" class=\"chart\"></div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"8\">\r\n          <el-card class=\"chart-card\">\r\n            <div slot=\"header\">\r\n              <span>图书分类占比</span>\r\n            </div>\r\n            <div ref=\"categoryChart\" class=\"chart\"></div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n      \r\n      <el-row :gutter=\"20\" style=\"margin-top: 20px;\">\r\n        <el-col :span=\"12\">\r\n          <el-card class=\"chart-card\">\r\n            <div slot=\"header\">\r\n              <span>热门图书TOP5</span>\r\n            </div>\r\n            <div ref=\"topBooksChart\" class=\"chart\"></div>\r\n          </el-card>\r\n        </el-col>\r\n        <el-col :span=\"12\">\r\n          <el-card class=\"chart-card\">\r\n            <div slot=\"header\">\r\n              <span>会员增长趋势</span>\r\n            </div>\r\n            <div ref=\"userGrowthChart\" class=\"chart\"></div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n\r\n    <el-card class=\"profile-card\">\r\n      <el-descriptions\r\n          title=\"个人中心\"\r\n          :column=\"2\"\r\n          border\r\n          class=\"custom-descriptions\"\r\n      >\r\n        <el-descriptions-item>\r\n          <template slot=\"label\" class=\"desc-label\">\r\n            <i class=\"el-icon-s-custom label-icon\"></i>\r\n            <span class=\"label-text\">账号</span>\r\n          </template>\r\n          <span class=\"desc-content\">{{ user.no }}</span>\r\n        </el-descriptions-item>\r\n\r\n        <el-descriptions-item>\r\n          <template slot=\"label\">\r\n            <i class=\"el-icon-message label-icon\"></i>\r\n            <span class=\"label-text\">电子邮件</span>\r\n          </template>\r\n          <span class=\"desc-content highlight\">{{ user.email }}</span>\r\n        </el-descriptions-item>\r\n\r\n        <el-descriptions-item>\r\n          <template slot=\"label\">\r\n            <i class=\"el-icon-mobile-phone label-icon\"></i>\r\n            <span class=\"label-text\">联系电话</span>\r\n          </template>\r\n          <span class=\"desc-content\">{{ user.phone || '--' }}</span>\r\n        </el-descriptions-item>\r\n\r\n        <el-descriptions-item>\r\n          <template slot=\"label\">\r\n            <i class=\"el-icon-location-outline label-icon\"></i>\r\n            <span class=\"label-text\">联系地址</span>\r\n          </template>\r\n          <span class=\"desc-content\">{{ user.company || '--' }}</span>\r\n        </el-descriptions-item>\r\n\r\n        <el-descriptions-item>\r\n          <template slot=\"label\">\r\n            <i class=\"el-icon-s-opportunity label-icon\"></i>\r\n            <span class=\"label-text\">系统角色</span>\r\n          </template>\r\n          <el-tag\r\n              :class=\"user.roleId === 0 ? 'admin-tag' : 'user-tag'\"\r\n              effect=\"dark\"\r\n          >\r\n            {{ user.roleId === 0 ? \"管理员\" : \"普通用户\" }}\r\n          </el-tag>\r\n        </el-descriptions-item>\r\n      </el-descriptions>\r\n\r\n      <div class=\"date-section\">\r\n        <DateUtils class=\"custom-date-utils\" />\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DateUtils from \"./DateUtils.vue\";\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  name: \"Home\",\r\n  components: {DateUtils},\r\n  data() {\r\n    return {\r\n      user: {},\r\n      statistics: {\r\n        totalBooks: 0,\r\n        monthlySales: 0,\r\n        totalUsers: 0,\r\n        monthlyIncome: 0\r\n      },\r\n      charts: {\r\n        salesChart: null,\r\n        categoryChart: null,\r\n        topBooksChart: null,\r\n        userGrowthChart: null\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    init(){\r\n      this.user = JSON.parse(sessionStorage.getItem('CurUser')) || {}\r\n      this.fetchStatistics()\r\n      this.initCharts()\r\n    },\r\n    \r\n    async fetchStatistics() {\r\n      try {\r\n        // 模拟数据\r\n        this.statistics = {\r\n          totalBooks: 12568,\r\n          monthlySales: 3289,\r\n          totalUsers: 8765,\r\n          monthlyIncome: 98765\r\n        }\r\n\r\n        // 更新销售趋势图\r\n        this.charts.salesChart.setOption({\r\n          xAxis: {\r\n            data: ['1月', '2月', '3月', '4月', '5月', '6月']\r\n          },\r\n          series: [\r\n            {\r\n              name: '销售额',\r\n              data: [45600, 58900, 67800, 76500, 89200, 98765]\r\n            },\r\n            {\r\n              name: '销量',\r\n              data: [1200, 1580, 1890, 2100, 2450, 3289]\r\n            }\r\n          ]\r\n        })\r\n\r\n        // 更新图书分类占比\r\n        this.charts.categoryChart.setOption({\r\n          series: [{\r\n            data: [\r\n              { value: 35, name: '文学小说' },\r\n              { value: 25, name: '教育考试' },\r\n              { value: 20, name: '经济管理' },\r\n              { value: 15, name: '科技计算机' },\r\n              { value: 5, name: '其他' }\r\n            ]\r\n          }]\r\n        })\r\n\r\n        // 更新热门图书TOP5\r\n        this.charts.topBooksChart.setOption({\r\n          yAxis: {\r\n            data: ['三体', '活着', '百年孤独', '围城', '平凡的世界']\r\n          },\r\n          series: [{\r\n            data: [320, 280, 250, 220, 200]\r\n          }]\r\n        })\r\n\r\n        // 更新会员增长趋势\r\n        this.charts.userGrowthChart.setOption({\r\n          series: [{\r\n            data: [150, 230, 224, 218, 135, 147]\r\n          }]\r\n        })\r\n\r\n        // 实际API调用（暂时注释）\r\n        // const { data: res } = await this.$axios.get(this.$httpUrl + '/statistics/dashboard')\r\n        // if (res.code === 200) {\r\n        //   this.statistics = res.data\r\n        // }\r\n      } catch (error) {\r\n        console.error('获取统计数据失败:', error)\r\n        this.$message.error('获取统计数据失败')\r\n      }\r\n    },\r\n\r\n    initCharts() {\r\n      this.$nextTick(() => {\r\n        this.initSalesChart()\r\n        this.initCategoryChart()\r\n        this.initTopBooksChart()\r\n        this.initUserGrowthChart()\r\n      })\r\n    },\r\n\r\n    initSalesChart() {\r\n      this.charts.salesChart = echarts.init(this.$refs.salesChart)\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        legend: {\r\n          data: ['销售额', '销量']\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['1月', '2月', '3月', '4月', '5月', '6月']\r\n        },\r\n        yAxis: [\r\n          {\r\n            type: 'value',\r\n            name: '销售额',\r\n            axisLabel: {\r\n              formatter: '¥{value}'\r\n            }\r\n          },\r\n          {\r\n            type: 'value',\r\n            name: '销量',\r\n            axisLabel: {\r\n              formatter: '{value}本'\r\n            }\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: '销售额',\r\n            type: 'line',\r\n            smooth: true,\r\n            data: [12000, 15000, 18000, 16000, 20000, 22000],\r\n            itemStyle: {\r\n              color: '#8B4513'\r\n            }\r\n          },\r\n          {\r\n            name: '销量',\r\n            type: 'bar',\r\n            yAxisIndex: 1,\r\n            data: [120, 150, 180, 160, 200, 220],\r\n            itemStyle: {\r\n              color: '#A0522D'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.charts.salesChart.setOption(option)\r\n    },\r\n\r\n    initCategoryChart() {\r\n      this.charts.categoryChart = echarts.init(this.$refs.categoryChart)\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left'\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: [\r\n              { value: 35, name: '文学小说' },\r\n              { value: 25, name: '教育考试' },\r\n              { value: 20, name: '经济管理' },\r\n              { value: 15, name: '科技计算机' },\r\n              { value: 5, name: '其他' }\r\n            ],\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.charts.categoryChart.setOption(option)\r\n    },\r\n\r\n    initTopBooksChart() {\r\n      this.charts.topBooksChart = echarts.init(this.$refs.topBooksChart)\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value'\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: ['三体', '活着', '百年孤独', '围城', '平凡的世界']\r\n        },\r\n        series: [\r\n          {\r\n            name: '销量',\r\n            type: 'bar',\r\n            data: [320, 280, 250, 220, 200],\r\n            itemStyle: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                { offset: 0, color: '#8B4513' },\r\n                { offset: 1, color: '#A0522D' }\r\n              ])\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.charts.topBooksChart.setOption(option)\r\n    },\r\n\r\n    initUserGrowthChart() {\r\n      this.charts.userGrowthChart = echarts.init(this.$refs.userGrowthChart)\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['1月', '2月', '3月', '4月', '5月', '6月']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            data: [150, 230, 224, 218, 135, 147],\r\n            type: 'line',\r\n            smooth: true,\r\n            areaStyle: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                { offset: 0, color: 'rgba(139, 69, 19, 0.5)' },\r\n                { offset: 1, color: 'rgba(139, 69, 19, 0.1)' }\r\n              ])\r\n            },\r\n            itemStyle: {\r\n              color: '#8B4513'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.charts.userGrowthChart.setOption(option)\r\n    }\r\n  },\r\n  mounted() {\r\n    window.addEventListener('resize', () => {\r\n      Object.values(this.charts).forEach(chart => {\r\n        chart && chart.resize()\r\n      })\r\n    })\r\n  },\r\n  beforeDestroy() {\r\n    Object.values(this.charts).forEach(chart => {\r\n      chart && chart.dispose()\r\n    })\r\n    window.removeEventListener('resize', this.handleResize)\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.home-container {\r\n  background: linear-gradient(135deg, #f5f7fa 0%, #e6eff9 100%);\r\n  min-height: calc(100vh - 80px);\r\n  padding: 40px 24px;\r\n  overflow: auto;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.welcome-card {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.welcome-title {\r\n  font-size: 2.5rem;\r\n  color: #2d3a4b;\r\n  margin: 0;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n  position: relative;\r\n  display: inline-block;\r\n  padding-bottom: 15px;\r\n}\r\n\r\n.stat-cards {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.stat-card {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.stat-card:hover {\r\n  transform: translateY(-5px);\r\n}\r\n\r\n.stat-icon {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  background: rgba(139, 69, 19, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 15px;\r\n}\r\n\r\n.stat-icon i {\r\n  font-size: 30px;\r\n  color: #8B4513;\r\n}\r\n\r\n.stat-info {\r\n  flex: 1;\r\n}\r\n\r\n.stat-title {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: #2d3a4b;\r\n}\r\n\r\n.charts-container {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.chart-card {\r\n  margin-bottom: 20px;\r\n  border-radius: 12px;\r\n}\r\n\r\n.chart-card :deep(.el-card__header) {\r\n  padding: 15px 20px;\r\n  font-weight: 600;\r\n  color: #2d3a4b;\r\n  border-bottom: 1px solid #ebeef5;\r\n}\r\n\r\n.chart {\r\n  height: 300px;\r\n  width: 100%;\r\n}\r\n\r\n.profile-card {\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  border-radius: 12px;\r\n  box-shadow: 0 6px 18px rgba(45, 58, 75, 0.1);\r\n  border: none;\r\n}\r\n\r\n::v-deep .custom-descriptions {\r\n  padding: 24px;\r\n}\r\n\r\n::v-deep .custom-descriptions .el-descriptions__header {\r\n  margin-bottom: 32px;\r\n}\r\n\r\n::v-deep .custom-descriptions .el-descriptions__title {\r\n  font-size: 20px;\r\n  color: #2d3a4b;\r\n  font-weight: 600;\r\n}\r\n\r\n.label-icon {\r\n  font-size: 18px;\r\n  color: #8B4513;\r\n  margin-right: 8px;\r\n}\r\n\r\n.label-text {\r\n  font-weight: 500;\r\n  color: #606266;\r\n}\r\n\r\n.desc-content {\r\n  font-size: 15px;\r\n  color: #303133;\r\n  font-weight: 500;\r\n}\r\n\r\n.highlight {\r\n  color: #8B4513;\r\n  font-weight: 600;\r\n}\r\n\r\n.admin-tag {\r\n  background: linear-gradient(45deg, #8B4513, #A0522D);\r\n  border: none;\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.date-section {\r\n  margin-top: 40px;\r\n  padding: 24px;\r\n  background: #f8fafc;\r\n  border-radius: 8px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}