{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  name: \"UserCenter\",\n  data() {\n    let checkDuplicate = (rule, value, callback) => {\n      if (this.userInfo.id) {\n        return callback();\n      }\n      this.$axios.get(this.$httpUrl + \"/user/findByNo?no=\" + this.userInfo.no).then(res => res.data).then(res => {\n        if (res.code !== 200) {\n          callback();\n        } else {\n          callback(new Error('用户名已经存在'));\n        }\n      });\n    };\n    return {\n      recentOrders: [{\n        title: '《解忧杂货店》',\n        date: '2023-08-15',\n        status: '已完成'\n      }, {\n        title: '《三体全集》',\n        date: '2023-08-10',\n        status: '配送中'\n      }],\n      saving: false,\n      uploadDialogVisible: false,\n      avatarPreview: '',\n      uploadFile: null,\n      uploading: false,\n      userInfo: {\n        id: '',\n        no: '',\n        name: '',\n        password: '',\n        email: '',\n        phone: '',\n        company: '',\n        avatar: ''\n      },\n      rules: {\n        no: [{\n          required: true,\n          message: '请更新您的用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 8,\n          message: '长度在 3 到 8 个字符',\n          trigger: 'blur'\n        }, {\n          validator: checkDuplicate,\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请更新您的名字',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请更新您的密码',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 8,\n          message: '长度在 3 到 8 个字符',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请请更新您的电子邮件',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: \"手机号不能为空，请更新您的手机号\",\n          trigger: \"blur\"\n        }, {\n          pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/,\n          message: \"请输入正确的手机号码\",\n          trigger: \"blur\"\n        }],\n        company: [{\n          required: true,\n          message: '请更新您的收货地址',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.loadUserProfile();\n  },\n  methods: {\n    async loadUserProfile() {\n      try {\n        this.loading = true;\n        // 从本地存储获取用户ID\n        const userId = JSON.parse(sessionStorage.getItem('CurUser')).id;\n        const res = await this.$axios.get(this.$httpUrl + '/user/profile', {\n          params: {\n            id: userId\n          }\n        });\n        if (res.data.code === 200) {\n          this.userInfo = res.data.data;\n        }\n      } catch (error) {\n        this.$message.error('获取用户信息失败');\n      }\n    },\n    async saveInfo() {\n      try {\n        await this.$refs.userInfoForm.validate();\n        // 构造更新数据\n        const updateData = {\n          ...this.userInfo,\n          // 如果密码为空则保留原密码\n          password: this.userInfo.password || undefined\n        };\n        const res = await this.$axios.post(this.$httpUrl + '/user/uupdate', updateData);\n        if (res.data.code === 200) {\n          this.$message.success('信息更新成功');\n          // 更新本地存储\n          const storedUser = JSON.parse(sessionStorage.getItem('CurUser'));\n          sessionStorage.setItem('CurUser', JSON.stringify({\n            ...storedUser,\n            ...updateData,\n            password: '' // 清除本地存储在浏览器的密码\n          }));\n        }\n      } catch (error) {\n        this.$message.error(error.response?.data?.msg || '更新失败');\n      }\n    },\n    // 显示上传对话框\n    showUploadDialog() {\n      this.uploadDialogVisible = true;\n    },\n    // 处理文件选择\n    handleFileChange(file) {\n      // 验证文件类型和大小\n      const allowedTypes = ['image/jpeg', 'image/png', 'image/gif'];\n      const maxSize = 2 * 1024 * 1024; // 2MB\n      // 使用file.type和file.size\n      if (!allowedTypes.includes(file.type)) {\n        this.$message.error('仅支持 JPG/PNG/GIF 格式');\n        return false;\n      }\n      if (file.size > maxSize) {\n        this.$message.error('图片大小不能超过2MB');\n        return false;\n      }\n      // 预览图片\n      this.avatarPreview = URL.createObjectURL(file);\n      this.uploadFile = file;\n      return false; // 阻止自动上传\n    },\n    // 执行上传操作\n    async doUploadAvatar() {\n      if (!this.uploadFile) {\n        this.$message.warning('请选择要上传的图片');\n        return;\n      }\n      this.uploading = true;\n      try {\n        const formData = new FormData();\n        formData.append('avatar', this.uploadFile);\n        formData.append('userId', this.userInfo.id);\n        const res = await this.$axios.post('/user/uploadAvatar', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('上传响应:', res.data);\n        if (res.data.code === 200) {\n          // 更新本地数据\n          this.userInfo.avatar = res.data.data.avatarUrl;\n          // 更新本地存储\n          const storedUser = JSON.parse(sessionStorage.getItem('CurUser'));\n          storedUser.avatar = res.data.data.avatarUrl;\n          sessionStorage.setItem('CurUser', JSON.stringify(storedUser));\n          this.$message.success('头像更新成功');\n          this.uploadDialogVisible = false;\n        }\n      } catch (error) {\n        this.$message.error(error.response?.data?.msg || '上传失败');\n      } finally {\n        this.uploading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","checkDuplicate","rule","value","callback","userInfo","id","$axios","get","$httpUrl","no","then","res","code","Error","recentOrders","title","date","status","saving","uploadDialogVisible","avatarPreview","uploadFile","uploading","password","email","phone","company","avatar","rules","required","message","trigger","min","max","validator","pattern","created","loadUserProfile","methods","loading","userId","JSON","parse","sessionStorage","getItem","params","error","$message","saveInfo","$refs","userInfoForm","validate","updateData","undefined","post","success","storedUser","setItem","stringify","response","msg","showUploadDialog","handleFileChange","file","allowedTypes","maxSize","includes","type","size","URL","createObjectURL","doUploadAvatar","warning","formData","FormData","append","headers","console","log","avatarUrl"],"sources":["src/user/UserCenter.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-center-container\">\r\n    <!-- 头部区域 -->\r\n    <div class=\"header-banner\">\r\n      <img src=\"@/assets/logo.png\" class=\"store-logo\" alt=\"书店logo\">\r\n      <h1 class=\"welcome-text\">欢迎回来，{{ userInfo.name || '书友' }}！</h1>\r\n    </div>\r\n\r\n    <div class=\"main-content\">\r\n      <!-- 左侧个人信息 -->\r\n      <div class=\"profile-section\">\r\n        <el-card class=\"profile-card\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span class=\"card-title\">📖 我的账户</span>\r\n          </div>\r\n\r\n          <!-- 用户头像 -->\r\n          <div class=\"avatar-section\">\r\n            <el-avatar :size=\"100\" :src=\"userInfo.avatar || require('@/assets/default-avatar.png')\"></el-avatar>\r\n            //未定义问题\r\n            <el-button type=\"text\" class=\"upload-btn\" @click=\"showUploadDialog\">更换头像</el-button>\r\n          </div>\r\n\r\n          <!-- 会员信息 -->\r\n          <div class=\"membership-info\">\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">会员等级：</span>\r\n              <el-tag type=\"warning\">黄金会员</el-tag>\r\n            </div>\r\n            <div class=\"info-item\">\r\n              <span class=\"label\">阅读积分：</span>\r\n              <span class=\"value\">1580 分</span>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n\r\n        <!-- 最近订单 -->\r\n        <el-card class=\"order-card\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span class=\"card-title\">📦 最近订单</span>\r\n            <el-button type=\"text\" @click=\"$router.push('/orders')\">查看全部</el-button>\r\n          </div>\r\n          <div class=\"order-list\">\r\n            <div v-for=\"(order, index) in recentOrders\" :key=\"index\" class=\"order-item\">\r\n              <div class=\"order-info\">\r\n                <span class=\"order-title\">{{ order.title }}</span>\r\n                <span class=\"order-date\">{{ order.date }}</span>\r\n              </div>\r\n              <el-tag :type=\"order.status === '已完成' ? 'success' : 'info'\">\r\n                {{ order.status }}\r\n              </el-tag>\r\n            </div>\r\n            <div v-if=\"recentOrders.length === 0\" class=\"empty-orders\">\r\n              暂无最近订单\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </div>\r\n\r\n      <!-- 右侧表单 -->\r\n      <div class=\"form-section\">\r\n        <el-card class=\"form-card\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span class=\"card-title\">✏️ 编辑资料</span>\r\n          </div>\r\n          <el-form\r\n              :model=\"userInfo\"\r\n              ref=\"userInfoForm\"\r\n              :rules=\"rules\"\r\n              label-width=\"100px\"\r\n              class=\"user-form\"\r\n          >\r\n            <el-form-item label=\"用户名\" prop=\"no\">\r\n              <el-input v-model=\"userInfo.no\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"名字\" prop=\"name\">\r\n              <el-input v-model=\"userInfo.name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"密码\" prop=\"password\">\r\n              <el-input v-model=\"userInfo.password\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"电子邮件\" prop=\"email\">\r\n              <el-input v-model=\"userInfo.email\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"联系方式\" prop=\"phone\">\r\n              <el-input v-model=\"userInfo.phone\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"收货地址\" prop=\"company\">\r\n              <el-input v-model=\"userInfo.company\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button type=\"primary\" @click=\"saveInfo\">保存信息</el-button>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button\r\n                  type=\"primary\"\r\n                  @click=\"saveInfo\"\r\n                  class=\"save-btn\"\r\n                  :loading=\"saving\"\r\n              >\r\n                <i class=\"el-icon-check\"></i> 保存修改\r\n              </el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-card>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"service-cards\">\r\n      <el-card class=\"service-card\">\r\n        <div class=\"service-content\">\r\n          <i class=\"el-icon-tickets service-icon\"></i>\r\n          <h3>我的书单</h3>\r\n          <p>查看您的收藏书籍和阅读清单</p>\r\n          <el-button type=\"text\">立即查看 ></el-button>\r\n        </div>\r\n      </el-card>\r\n\r\n      <el-card class=\"service-card\">\r\n        <div class=\"service-content\">\r\n          <i class=\"el-icon-star-off service-icon\"></i>\r\n          <h3>会员特权</h3>\r\n          <p>享受专属折扣和优先购买权</p>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n\r\n    <!-- 头像上传对话框 -->\r\n    <el-dialog\r\n        title=\"更换头像\"\r\n        :visible.sync=\"uploadDialogVisible\"\r\n        width=\"30%\"\r\n        :close-on-click-modal=\"false\"\r\n    >\r\n      <div class=\"upload-content\">\r\n        <el-upload\r\n            class=\"avatar-uploader\"\r\n            action=\"#\"\r\n            :show-file-list=\"false\"\r\n            :before-upload=\"handleFileChange\"\r\n            accept=\"image/jpeg,image/png,image/gif\"\r\n            :auto-upload=\"false\"\r\n        >\r\n          <div v-if=\"avatarPreview\" class=\"avatar-preview\">\r\n            <img :src=\"avatarPreview\" class=\"avatar\">\r\n            <div class=\"hover-mask\">\r\n              <i class=\"el-icon-upload\"></i>\r\n            </div>\r\n          </div>\r\n          <div v-else class=\"upload-trigger\">\r\n            <i class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n            <div class=\"upload-tips\">点击上传头像</div>\r\n          </div>\r\n        </el-upload>\r\n\r\n        <div class=\"action-buttons\">\r\n          <el-button\r\n              type=\"primary\"\r\n              :loading=\"uploading\"\r\n              @click=\"doUploadAvatar\"\r\n          >\r\n            确认上传\r\n          </el-button>\r\n          <el-button @click=\"uploadDialogVisible = false\">取消</el-button>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"UserCenter\",\r\n  data() {\r\n    let checkDuplicate =(rule,value,callback)=>{\r\n      if(this.userInfo.id){\r\n        return callback();\r\n      }\r\n      this.$axios.get(this.$httpUrl+\"/user/findByNo?no=\"+this.userInfo.no).then(res=>res.data).then(res=>{\r\n        if(res.code!==200){\r\n          callback()\r\n        }else{\r\n          callback(new Error('用户名已经存在'));\r\n        }\r\n      })\r\n    };\r\n    return {\r\n      recentOrders: [\r\n        { title: '《解忧杂货店》', date: '2023-08-15', status: '已完成' },\r\n        { title: '《三体全集》', date: '2023-08-10', status: '配送中' }\r\n      ],\r\n      saving: false,\r\n      uploadDialogVisible: false,\r\n      avatarPreview: '',\r\n      uploadFile: null,\r\n      uploading: false,\r\n      userInfo: {\r\n        id:'',\r\n        no:'',\r\n        name:'',\r\n        password:'',\r\n        email:'',\r\n        phone:'',\r\n        company:'',\r\n        avatar:''\r\n      },\r\n\r\n      rules: {\r\n        no: [\r\n          {required: true, message: '请更新您的用户名', trigger: 'blur'},\r\n          {min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur'},\r\n          {validator:checkDuplicate,trigger: 'blur'}\r\n        ],\r\n        name: [\r\n          {required: true, message: '请更新您的名字', trigger: 'blur'}\r\n        ],\r\n        password: [\r\n          {required: true, message: '请更新您的密码', trigger: 'blur'},\r\n          {min: 3, max: 8, message: '长度在 3 到 8 个字符', trigger: 'blur'}\r\n        ],\r\n        email: [\r\n          {required: true, message: '请请更新您的电子邮件', trigger: 'blur'}\r\n        ],\r\n        phone: [\r\n          {required: true,message: \"手机号不能为空，请更新您的手机号\",trigger: \"blur\"},\r\n          {pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/, message: \"请输入正确的手机号码\", trigger: \"blur\"}\r\n        ],\r\n        company: [\r\n          {required: true, message: '请更新您的收货地址', trigger: 'blur'}\r\n        ],\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadUserProfile();\r\n  },\r\n  methods: {\r\n    async loadUserProfile() {\r\n      try {\r\n        this.loading = true;\r\n        // 从本地存储获取用户ID\r\n        const userId = JSON.parse(sessionStorage.getItem('CurUser')).id;\r\n        const res = await this.$axios.get(this.$httpUrl+'/user/profile', {\r\n          params: {\r\n            id: userId\r\n          }\r\n        });\r\n        if (res.data.code === 200) {\r\n          this.userInfo = res.data.data;\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取用户信息失败');\r\n      }\r\n    },\r\n\r\n    async saveInfo() {\r\n      try {\r\n        await this.$refs.userInfoForm.validate();\r\n        // 构造更新数据\r\n        const updateData = {\r\n          ...this.userInfo,\r\n          // 如果密码为空则保留原密码\r\n          password: this.userInfo.password || undefined\r\n        };\r\n        const res = await this.$axios.post(this.$httpUrl+'/user/uupdate', updateData);\r\n        if (res.data.code === 200) {\r\n          this.$message.success('信息更新成功');\r\n          // 更新本地存储\r\n          const storedUser = JSON.parse(sessionStorage.getItem('CurUser'));\r\n          sessionStorage.setItem('CurUser', JSON.stringify({\r\n            ...storedUser,\r\n            ...updateData,\r\n            password: '' // 清除本地存储在浏览器的密码\r\n          }));\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(error.response?.data?.msg || '更新失败');\r\n      }\r\n    },\r\n    // 显示上传对话框\r\n    showUploadDialog() {\r\n      this.uploadDialogVisible = true\r\n    },\r\n\r\n    // 处理文件选择\r\n    handleFileChange(file)\r\n    {\r\n      // 验证文件类型和大小\r\n      const allowedTypes = ['image/jpeg', 'image/png', 'image/gif']\r\n      const maxSize = 2 * 1024 * 1024 // 2MB\r\n      // 使用file.type和file.size\r\n      if (!allowedTypes.includes(file.type)) {\r\n        this.$message.error('仅支持 JPG/PNG/GIF 格式')\r\n        return false\r\n      }\r\n      if (file.size > maxSize) {\r\n        this.$message.error('图片大小不能超过2MB')\r\n        return false\r\n      }\r\n      // 预览图片\r\n      this.avatarPreview = URL.createObjectURL(file)\r\n      this.uploadFile = file\r\n      return false // 阻止自动上传\r\n    },\r\n    // 执行上传操作\r\n    async doUploadAvatar() {\r\n      if (!this.uploadFile) {\r\n        this.$message.warning('请选择要上传的图片')\r\n        return\r\n      }\r\n      this.uploading = true\r\n      try {\r\n        const formData = new FormData()\r\n        formData.append('avatar', this.uploadFile)\r\n        formData.append('userId', this.userInfo.id)\r\n        const res = await this.$axios.post('/user/uploadAvatar', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        })\r\n        console.log('上传响应:', res.data)\r\n        if (res.data.code === 200) {\r\n          // 更新本地数据\r\n          this.userInfo.avatar = res.data.data.avatarUrl\r\n          // 更新本地存储\r\n          const storedUser = JSON.parse(sessionStorage.getItem('CurUser'))\r\n          storedUser.avatar = res.data.data.avatarUrl\r\n          sessionStorage.setItem('CurUser', JSON.stringify(storedUser))\r\n\r\n          this.$message.success('头像更新成功')\r\n          this.uploadDialogVisible = false\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(error.response?.data?.msg || '上传失败')\r\n      } finally {\r\n        this.uploading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-center-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.header-banner {\r\n  background: linear-gradient(135deg, #2c3e50, #3498db);\r\n  padding: 40px;\r\n  border-radius: 8px;\r\n  margin-bottom: 30px;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.store-logo {\r\n  width: 120px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.welcome-text {\r\n  color: white;\r\n  font-size: 28px;\r\n  margin: 0;\r\n  text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\r\n}\r\n\r\n.main-content {\r\n  display: grid;\r\n  grid-template-columns: 1fr 2fr;\r\n  gap: 24px;\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.profile-card, .form-card {\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.card-title {\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: #2c3e50;\r\n}\r\n\r\n.avatar-section {\r\n  text-align: center;\r\n  padding: 20px 0;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.upload-btn {\r\n  margin-top: 10px;\r\n}\r\n\r\n.membership-info {\r\n  padding: 20px 0;\r\n}\r\n\r\n.info-item {\r\n  margin: 15px 0;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.label {\r\n  color: #666;\r\n  min-width: 80px;\r\n}\r\n\r\n.value {\r\n  color: #2c3e50;\r\n  font-weight: 500;\r\n}\r\n\r\n.order-card {\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.order-list {\r\n  max-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.order-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 12px 0;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.order-title {\r\n  font-weight: 500;\r\n  color: #333;\r\n}\r\n\r\n.order-date {\r\n  font-size: 12px;\r\n  color: #999;\r\n  display: block;\r\n}\r\n\r\n.service-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\r\n  gap: 24px;\r\n}\r\n\r\n.service-card {\r\n  transition: transform 0.3s ease;\r\n  border-radius: 12px;\r\n}\r\n\r\n.service-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 6px 16px rgba(0,0,0,0.1);\r\n}\r\n\r\n.service-content {\r\n  text-align: center;\r\n  padding: 30px;\r\n}\r\n\r\n.service-icon {\r\n  font-size: 40px;\r\n  color: #3498db;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.service-content h3 {\r\n  color: #2c3e50;\r\n  margin: 10px 0;\r\n}\r\n\r\n.service-content p {\r\n  color: #666;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.save-btn {\r\n  width: 100%;\r\n  padding: 12px 0;\r\n  font-size: 16px;\r\n}\r\n.upload-content {\r\n  text-align: center;\r\n}\r\n\r\n.avatar-uploader {\r\n  border: 2px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 200px;\r\n  height: 200px;\r\n  margin: 0 auto 20px;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.avatar-uploader:hover {\r\n  border-color: #409EFF;\r\n}\r\n\r\n.avatar-preview {\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n}\r\n\r\n.avatar {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.hover-mask {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0,0,0,0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  opacity: 0;\r\n  transition: opacity 0.3s;\r\n}\r\n\r\n.hover-mask i {\r\n  color: white;\r\n  font-size: 24px;\r\n}\r\n\r\n.avatar-preview:hover .hover-mask {\r\n  opacity: 1;\r\n}\r\n\r\n.upload-trigger {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  color: #8c939d;\r\n}\r\n\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.upload-tips {\r\n  font-size: 12px;\r\n}\r\n\r\n.action-buttons {\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}