{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport Login from '@/Login.vue';\nimport AdminManage from \"@/admin/AdminManage.vue\";\nimport Register from \"@/Register.vue\";\nimport UserManage from \"@/admin/UserManage.vue\";\nimport IndexPage from \"@/admin/IndexPage.vue\";\nimport HomePage from \"@/admin/HomePage.vue\";\nimport SearchPage from \"@/user/home/SearchPage.vue\";\nimport ContainerPage from \"@/user/home/ContainerPage.vue\";\nimport HomeBar from \"@/user/home/HomeBar.vue\";\nimport BookPage from \"@/user/BookPage.vue\";\nimport CategoryPage from \"@/user/CategoryPage.vue\";\nimport UserCenter from \"@/user/UserCenter.vue\";\nimport ReaderHome from \"@/user/ReaderHome.vue\";\nimport ConfirmPage from \"@/user/ConfirmPage.vue\";\nimport PayPage from \"@/user/PayPage.vue\";\nimport PayResult from \"@/user/PayResult.vue\";\nimport OrderPage from \"@/user/OrderPage.vue\";\nimport OrderDetail from \"@/user/OrderDetail.vue\";\nimport CartPage from \"@/user/CartPage.vue\";\nimport BookManage from \"@/admin/BookManage.vue\";\nimport CategoryManage from \"@/admin/CategoryManage.vue\";\nimport OrderManage from \"@/admin/OrderManage.vue\";\nimport ReviewManage from \"@/admin/ReviewManage.vue\";\nimport MyReview from \"@/user/MyReview.vue\";\nimport MyReservation from \"@/user/MyReservation.vue\";\nimport AnnouncementManage from \"@/admin/AnnouncementManage.vue\";\nimport AnnouncementPage from \"@/user/AnnouncementPage.vue\";\nimport GuestbookManage from \"@/admin/GuestbookManage.vue\";\nimport GuestbookPage from \"@/user/GuestbookPage.vue\";\nimport RecordManage from \"@/admin/RecordManage.vue\";\nVue.use(VueRouter);\nconst routes = [\n//前台\n{\n  path: \"/\",\n  name: \"前台\",\n  component: ContainerPage,\n  children: [\n  //公共路由\n  {\n    path: '/',\n    name: '前台首页',\n    component: HomeBar\n  }, {\n    path: '/search',\n    name: \"搜索\",\n    component: SearchPage\n  }, {\n    path: '/book',\n    name: '书籍详情页',\n    component: BookPage\n  }, {\n    path: '/category',\n    name: '分类页',\n    component: CategoryPage\n  }, {\n    path: '/announcement',\n    name: '公告',\n    component: AnnouncementPage\n  }, {\n    path: '/reader',\n    name: '读者之家',\n    component: ReaderHome\n  }, {\n    path: '/cart',\n    name: '购物车',\n    component: CartPage\n  },\n  // 需要登录的用户路由\n  {\n    path: '/center',\n    name: '个人中心',\n    component: UserCenter,\n    meta: {\n      requiresAuth: true,\n      role: 1\n    }\n  }, {\n    path: '/confirm',\n    component: ConfirmPage,\n    props: route => ({\n      oiids: route.query.oiids,\n      type: route.query.type\n    }),\n    meta: {\n      requiresAuth: true,\n      role: 1\n    }\n  }, {\n    path: '/pay',\n    name: '支付',\n    component: PayPage,\n    meta: {\n      requiresAuth: true,\n      role: 1\n    }\n  }, {\n    path: '/pay-result',\n    name: '支付result',\n    component: PayResult,\n    meta: {\n      requiresAuth: true,\n      role: 1\n    }\n  }, {\n    path: '/order',\n    name: '我的订单',\n    component: OrderPage,\n    meta: {\n      requiresAuth: true,\n      role: 1\n    }\n  }, {\n    path: '/order/detail/:oid',\n    name: '订单详情',\n    component: OrderDetail,\n    meta: {\n      requiresAuth: true,\n      role: 1\n    }\n  }, {\n    path: '/myreview',\n    name: '我的评论',\n    component: MyReview,\n    meta: {\n      requiresAuth: true,\n      role: 1\n    }\n  }, {\n    path: '/myreservation',\n    name: '我的预定',\n    component: MyReservation,\n    meta: {\n      requiresAuth: true,\n      role: 1\n    }\n  }, {\n    path: '/guestbook',\n    name: \"留言\",\n    component: GuestbookPage,\n    meta: {\n      requiresAuth: true,\n      role: 1\n    }\n  }]\n},\n//通用\n{\n  path: '/login',\n  name: '登录',\n  component: Login,\n  meta: {\n    guestOnly: true\n  } // 仅允许未登录用户访问\n}, {\n  path: '/register',\n  name: '注册',\n  component: Register,\n  meta: {\n    guestOnly: true\n  } // 仅允许未登录用户访问 \n},\n//后台\n{\n  path: \"/admin\",\n  name: '后台首页',\n  redirect: \"/admin/home\",\n  component: IndexPage,\n  meta: {\n    requiresAuth: true,\n    role: 0\n  },\n  // 管理员权限\n  children: [{\n    path: \"home\",\n    name: \"HomePage\",\n    component: HomePage\n  }, {\n    path: \"ad\",\n    name: \"管理员管理\",\n    component: AdminManage\n  }, {\n    path: \"user\",\n    name: \"用户管理\",\n    component: UserManage\n  }, {\n    path: \"book\",\n    name: \"书籍管理\",\n    component: BookManage\n  }, {\n    path: \"category\",\n    name: \"分类管理\",\n    component: CategoryManage\n  }, {\n    path: \"order\",\n    name: \"订单管理\",\n    component: OrderManage\n  }, {\n    path: \"review\",\n    name: \"评论管理\",\n    component: ReviewManage\n  }, {\n    path: \"announcement\",\n    name: \"公告管理\",\n    component: AnnouncementManage\n  }, {\n    path: \"guestbook\",\n    name: \"留言管理\",\n    component: GuestbookManage\n  }, {\n    path: \"record\",\n    name: \"出入库记录管理\",\n    component: RecordManage\n  }]\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  // 可选，去除URL中的#\n  routes\n});\n\n//全局路由守卫\nrouter.beforeEach((to, from, next) => {\n  // 获取路由元信息\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n  const guestOnly = to.matched.some(record => record.meta.guestOnly);\n  // 获取用户角色信息\n  const currentUser = JSON.parse(sessionStorage.getItem('CurUser'));\n  const isLoggedIn = currentUser !== null;\n  const userRole = isLoggedIn ? currentUser.roleId : null;\n  // 处理需要认证的路由\n  if (requiresAuth) {\n    if (!isLoggedIn) {\n      // 未登录时跳转到登录页，并记录目标路径\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      // 获取路由需要的角色（从最深层的路由开始查找）\n      const requiredRole = to.matched.slice().reverse().find(r => r.meta.role)?.meta.role;\n      // 验证角色权限\n      if (requiredRole !== undefined && userRole !== requiredRole) {\n        // 角色不匹配时根据当前角色重定向\n        const redirectPath = userRole === 0 ? '/admin' : '/';\n        next(redirectPath);\n        // 可以在此处添加权限提示，但需要全局消息组件支持\n      } else {\n        next();\n      }\n    }\n  }\n  // 处理仅允许游客访问的路由\n  else if (guestOnly) {\n    if (isLoggedIn) {\n      // 已登录用户访问登录/注册页时重定向到首页\n      const redirectPath = userRole === 0 ? '/admin' : '/';\n      next(redirectPath);\n    } else {\n      next();\n    }\n  }\n  // 公共路由直接放行\n  else {\n    next();\n  }\n});\n\n//解决路由错误问题\nconst VueRouterPush = VueRouter.prototype.push;\nVueRouter.prototype.push = function push(to) {\n  return VueRouterPush.call(this, to).catch(err => err);\n};\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","Login","AdminManage","Register","UserManage","IndexPage","HomePage","SearchPage","ContainerPage","HomeBar","BookPage","CategoryPage","UserCenter","ReaderHome","ConfirmPage","PayPage","PayResult","OrderPage","OrderDetail","CartPage","BookManage","CategoryManage","OrderManage","ReviewManage","MyReview","MyReservation","AnnouncementManage","AnnouncementPage","GuestbookManage","GuestbookPage","RecordManage","use","routes","path","name","component","children","meta","requiresAuth","role","props","route","oiids","query","type","guestOnly","redirect","router","mode","beforeEach","to","from","next","matched","some","record","currentUser","JSON","parse","sessionStorage","getItem","isLoggedIn","userRole","roleId","fullPath","requiredRole","slice","reverse","find","r","undefined","redirectPath","VueRouterPush","prototype","push","call","catch","err"],"sources":["C:/Users/30343/OneDrive/Desktop/books/web-book/src/router/router.js"],"sourcesContent":["import Vue from 'vue'\r\nimport VueRouter from 'vue-router'\r\nimport Login from '@/Login.vue'\r\nimport AdminManage from \"@/admin/AdminManage.vue\";\r\nimport Register from \"@/Register.vue\";\r\nimport UserManage from \"@/admin/UserManage.vue\";\r\nimport IndexPage from \"@/admin/IndexPage.vue\";\r\nimport HomePage from \"@/admin/HomePage.vue\";\r\nimport SearchPage from \"@/user/home/SearchPage.vue\";\r\nimport ContainerPage from \"@/user/home/ContainerPage.vue\";\r\nimport HomeBar from \"@/user/home/HomeBar.vue\";\r\nimport BookPage from \"@/user/BookPage.vue\";\r\nimport CategoryPage from \"@/user/CategoryPage.vue\";\r\nimport UserCenter from \"@/user/UserCenter.vue\";\r\nimport ReaderHome from \"@/user/ReaderHome.vue\";\r\nimport ConfirmPage from \"@/user/ConfirmPage.vue\";\r\nimport PayPage from \"@/user/PayPage.vue\";\r\nimport PayResult from \"@/user/PayResult.vue\";\r\nimport OrderPage from \"@/user/OrderPage.vue\";\r\nimport OrderDetail from \"@/user/OrderDetail.vue\";\r\nimport CartPage from \"@/user/CartPage.vue\";\r\nimport BookManage from \"@/admin/BookManage.vue\";\r\nimport CategoryManage from \"@/admin/CategoryManage.vue\";\r\nimport OrderManage from \"@/admin/OrderManage.vue\";\r\nimport ReviewManage from \"@/admin/ReviewManage.vue\";\r\nimport MyReview from \"@/user/MyReview.vue\";\r\nimport MyReservation from \"@/user/MyReservation.vue\";\r\nimport AnnouncementManage from \"@/admin/AnnouncementManage.vue\";\r\nimport AnnouncementPage from \"@/user/AnnouncementPage.vue\";\r\nimport GuestbookManage from \"@/admin/GuestbookManage.vue\";\r\nimport GuestbookPage from \"@/user/GuestbookPage.vue\";\r\nimport RecordManage from \"@/admin/RecordManage.vue\";\r\n\r\n\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n    //前台\r\n    {\r\n        path: \"/\",\r\n        name:\"前台\",\r\n        component: ContainerPage,\r\n        children: [\r\n            //公共路由\r\n            { path: '/', name: '前台首页', component: HomeBar },\r\n            { path: '/search', name:\"搜索\", component: SearchPage },\r\n            { path: '/book', name:'书籍详情页', component: BookPage },\r\n            { path: '/category', name:'分类页', component: CategoryPage },\r\n            { path: '/announcement', name:'公告', component:AnnouncementPage},\r\n            { path: '/reader', name:'读者之家', component: ReaderHome},\r\n            { path:'/cart', name:'购物车', component:CartPage},\r\n            // 需要登录的用户路由\r\n            {\r\n                path:'/center',\r\n                name: '个人中心',\r\n                component: UserCenter,\r\n                meta: { requiresAuth: true, role: 1 }\r\n            },\r\n            {\r\n                path: '/confirm',\r\n                component: ConfirmPage,\r\n                props: route => ({\r\n                    oiids: route.query.oiids,\r\n                    type: route.query.type\r\n                }),\r\n                meta: { requiresAuth: true, role: 1 }\r\n            },\r\n            {\r\n                path:'/pay',\r\n                name:'支付',\r\n                component: PayPage,\r\n                meta: { requiresAuth: true, role: 1 }\r\n            },\r\n            {\r\n                path:'/pay-result',\r\n                name:'支付result',\r\n                component: PayResult,\r\n                meta: { requiresAuth: true, role: 1 }\r\n            },\r\n            {\r\n                path:'/order',\r\n                name:'我的订单',\r\n                component: OrderPage,\r\n                meta: { requiresAuth: true, role: 1 }\r\n            },\r\n            {\r\n                path:'/order/detail/:oid',\r\n                name:'订单详情',\r\n                component: OrderDetail,\r\n                meta: { requiresAuth: true, role: 1 }\r\n            },\r\n            {\r\n                path:'/myreview',\r\n                name:'我的评论',\r\n                component:MyReview,\r\n                meta: { requiresAuth: true, role: 1 }\r\n            },\r\n            {\r\n                path: '/myreservation',\r\n                name:'我的预定',\r\n                component:MyReservation,\r\n                meta: { requiresAuth: true, role: 1 }\r\n            },\r\n            {\r\n                path:'/guestbook',\r\n                name: \"留言\",\r\n                component:GuestbookPage,\r\n                meta: { requiresAuth: true, role: 1 }\r\n            }\r\n        ]\r\n    },\r\n\r\n    //通用\r\n    {\r\n        path: '/login',\r\n        name: '登录',\r\n        component: Login,\r\n        meta: { guestOnly: true } // 仅允许未登录用户访问\r\n    },\r\n    {\r\n        path: '/register',\r\n        name: '注册',\r\n        component: Register,\r\n        meta: { guestOnly: true } // 仅允许未登录用户访问 \r\n    },\r\n\r\n    //后台\r\n    {\r\n        path:\"/admin\",\r\n        name: '后台首页',\r\n        redirect:\"/admin/home\",\r\n        component: IndexPage,\r\n        meta: { requiresAuth: true, role: 0 }, // 管理员权限\r\n        children:[\r\n            {\r\n                path:\"home\",\r\n                name:\"HomePage\",\r\n                component:HomePage,\r\n            },\r\n            {\r\n                path:\"ad\",\r\n                name:\"管理员管理\",\r\n                component:AdminManage,\r\n            },\r\n            {\r\n                path:\"user\",\r\n                name: \"用户管理\",\r\n                component:UserManage,\r\n            },\r\n            {\r\n                path:\"book\",\r\n                name: \"书籍管理\",\r\n                component:BookManage,\r\n            },\r\n            {\r\n                path:\"category\",\r\n                name: \"分类管理\",\r\n                component:CategoryManage,\r\n            },\r\n            {\r\n                path:\"order\",\r\n                name: \"订单管理\",\r\n                component:OrderManage,\r\n            },\r\n            {\r\n                path:\"review\",\r\n                name: \"评论管理\",\r\n                component:ReviewManage,\r\n            },\r\n            {\r\n                path:\"announcement\",\r\n                name: \"公告管理\",\r\n                component:AnnouncementManage,\r\n            },\r\n            {\r\n                path:\"guestbook\",\r\n                name: \"留言管理\",\r\n                component:GuestbookManage,\r\n            },\r\n            {\r\n                path:\"record\",\r\n                name: \"出入库记录管理\",\r\n                component:RecordManage,\r\n            }\r\n        ]\r\n    }\r\n\r\n]\r\n\r\nconst router = new VueRouter({\r\n    mode: 'history',  // 可选，去除URL中的#\r\n    routes,\r\n})\r\n\r\n//全局路由守卫\r\nrouter.beforeEach((to, from, next) => {\r\n    // 获取路由元信息\r\n    const requiresAuth = to.matched.some(record => record.meta.requiresAuth)\r\n    const guestOnly = to.matched.some(record => record.meta.guestOnly)\r\n    // 获取用户角色信息\r\n    const currentUser = JSON.parse(sessionStorage.getItem('CurUser'))\r\n    const isLoggedIn = currentUser !== null\r\n    const userRole = isLoggedIn ? currentUser.roleId : null\r\n    // 处理需要认证的路由\r\n    if (requiresAuth) {\r\n        if (!isLoggedIn) {\r\n            // 未登录时跳转到登录页，并记录目标路径\r\n            next({\r\n                path: '/login',\r\n                query: { redirect: to.fullPath }\r\n            })\r\n        } else {\r\n            // 获取路由需要的角色（从最深层的路由开始查找）\r\n            const requiredRole = to.matched.slice().reverse().find(r => r.meta.role)?.meta.role\r\n            // 验证角色权限\r\n            if (requiredRole !== undefined && userRole !== requiredRole) {\r\n                // 角色不匹配时根据当前角色重定向\r\n                const redirectPath = userRole === 0 ? '/admin' : '/'\r\n                next(redirectPath)\r\n                // 可以在此处添加权限提示，但需要全局消息组件支持\r\n            } else {\r\n                next()\r\n            }\r\n        }\r\n    }\r\n    // 处理仅允许游客访问的路由\r\n    else if (guestOnly) {\r\n        if (isLoggedIn) {\r\n            // 已登录用户访问登录/注册页时重定向到首页\r\n            const redirectPath = userRole === 0 ? '/admin' : '/'\r\n            next(redirectPath)\r\n        } else {\r\n            next()\r\n        }\r\n    }\r\n    // 公共路由直接放行\r\n    else {\r\n        next()\r\n    }\r\n})\r\n\r\n//解决路由错误问题\r\nconst VueRouterPush = VueRouter.prototype.push\r\nVueRouter.prototype.push = function push (to){\r\n    return VueRouterPush.call(this,to).catch(err=>err)\r\n}\r\n\r\nexport default router"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}