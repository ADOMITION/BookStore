{"ast":null,"code":"export default {\n  data() {\n    return {\n      searchKeyword: '',\n      books: [],\n      categories: [],\n      loading: false,\n      dialogVisible: false,\n      dialogTitle: '新增书籍',\n      currentBook: this.initBook(),\n      pagination: {\n        current: 1,\n        size: 10,\n        total: 0\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入书名',\n          trigger: 'blur'\n        }],\n        author: [{\n          required: true,\n          message: '请输入作者',\n          trigger: 'blur'\n        }],\n        price: [{\n          required: true,\n          message: '请输入价格',\n          trigger: 'blur'\n        }],\n        cid: [{\n          required: true,\n          message: '请选择分类',\n          trigger: 'change'\n        }],\n        stock: [{\n          required: true,\n          message: '请输入库存',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.loadBooks();\n    this.loadCategories();\n  },\n  methods: {\n    initBook() {\n      return {\n        id: null,\n        name: '',\n        author: '',\n        price: 0,\n        cid: null,\n        stock: 0,\n        url: '',\n        info: '',\n        status: 1\n      };\n    },\n    async loadCategories() {\n      const {\n        data\n      } = await this.$axios.get('/category/list');\n      this.categories = data.data;\n    },\n    async loadBooks() {\n      this.loading = true;\n      try {\n        const params = {\n          pageNum: this.pagination.current,\n          pageSize: this.pagination.size,\n          param: {\n            keyword: this.searchKeyword\n          }\n        };\n        const {\n          data\n        } = await this.$axios.post('/book/search', params);\n        this.books = data.data;\n        this.pagination.total = data.total;\n      } catch (error) {\n        this.$message.error('加载失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleCreate() {\n      this.currentBook = this.initBook();\n      this.dialogTitle = '新增书籍';\n      this.dialogVisible = true;\n    },\n    handleEdit(row) {\n      this.currentBook = {\n        ...row\n      };\n      this.dialogTitle = '编辑书籍';\n      this.dialogVisible = true;\n    },\n    handleUploadSuccess(res) {\n      this.currentBook.url = res.data.url;\n    },\n    async handleStatusChange(row) {\n      try {\n        await this.$axios.post('/book/update', row);\n        this.$message.success('状态更新成功');\n      } catch (error) {\n        this.loadBooks();\n        this.$message.error('更新失败');\n      }\n    },\n    async handleDelete(id) {\n      this.$confirm('确定删除该书籍吗？', '提示', {\n        type: 'warning'\n      }).then(async () => {\n        const {\n          data\n        } = await this.$axios.get(`/book/del?id=${id}`);\n        if (data.code === 200) {\n          this.$message.success('删除成功');\n          this.loadBooks();\n        }\n      });\n    },\n    submitForm() {\n      this.$refs.bookForm.validate(async valid => {\n        if (valid) {\n          const api = this.currentBook.id ? '/book/update' : '/book/save';\n          const {\n            data\n          } = await this.$axios.post(api, this.currentBook);\n          if (data.code === 200) {\n            this.$message.success('操作成功');\n            this.dialogVisible = false;\n            this.loadBooks();\n          }\n        }\n      });\n    },\n    handleSizeChange(size) {\n      this.pagination.size = size;\n      this.loadBooks();\n    },\n    handleCurrentChange(current) {\n      this.pagination.current = current;\n      this.loadBooks();\n    }\n  }\n};","map":{"version":3,"names":["data","searchKeyword","books","categories","loading","dialogVisible","dialogTitle","currentBook","initBook","pagination","current","size","total","rules","name","required","message","trigger","author","price","cid","stock","created","loadBooks","loadCategories","methods","id","url","info","status","$axios","get","params","pageNum","pageSize","param","keyword","post","error","$message","handleCreate","handleEdit","row","handleUploadSuccess","res","handleStatusChange","success","handleDelete","$confirm","type","then","code","submitForm","$refs","bookForm","validate","valid","api","handleSizeChange","handleCurrentChange"],"sources":["src/admin/BookManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"book-management\">\r\n    <!-- 搜索和新增 -->\r\n    <div class=\"header\">\r\n      <el-input\r\n          v-model=\"searchKeyword\"\r\n          placeholder=\"请输入书名/作者\"\r\n          style=\"width: 300px; margin-right: 20px\"\r\n          @keyup.enter=\"loadBooks\"\r\n      ></el-input>\r\n      <el-button type=\"primary\" @click=\"loadBooks\">搜索</el-button>\r\n      <el-button type=\"success\" @click=\"handleCreate\">新增书籍</el-button>\r\n    </div>\r\n\r\n    <!-- 书籍表格 -->\r\n    <el-table\r\n        :data=\"books\"\r\n        border\r\n        style=\"width: 100%; margin-top: 20px\"\r\n        v-loading=\"loading\"\r\n    >\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n      <el-table-column label=\"封面\" width=\"120\">\r\n        <template slot-scope=\"{row}\">\r\n          <el-image\r\n              :src=\"row.url\"\r\n              style=\"width: 80px; height: 100px\"\r\n              fit=\"contain\"\r\n          ></el-image>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"name\" label=\"书名\"></el-table-column>\r\n      <el-table-column prop=\"author\" label=\"作者\" width=\"120\"></el-table-column>\r\n      <el-table-column prop=\"price\" label=\"价格\" width=\"120\">\r\n        <template slot-scope=\"{row}\">¥{{ row.price.toFixed(2) }}</template>\r\n      </el-table-column>\r\n      <el-table-column label=\"状态\" width=\"100\">\r\n        <template slot-scope=\"{row}\">\r\n          <el-switch\r\n              v-model=\"row.status\"\r\n              :active-value=\"1\"\r\n              :inactive-value=\"0\"\r\n              @change=\"handleStatusChange(row)\"\r\n          ></el-switch>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"200\">\r\n        <template slot-scope=\"{row}\">\r\n          <el-button size=\"mini\" @click=\"handleEdit(row)\">编辑</el-button>\r\n          <el-button\r\n              size=\"mini\"\r\n              type=\"danger\"\r\n              @click=\"handleDelete(row.id)\"\r\n          >删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n        style=\"margin-top: 20px\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"pagination.current\"\r\n        :page-sizes=\"[10, 20, 50]\"\r\n        :page-size=\"pagination.size\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"pagination.total\"\r\n    ></el-pagination>\r\n\r\n    <!-- 新增/编辑对话框 -->\r\n    <el-dialog\r\n        :title=\"dialogTitle\"\r\n        :visible.sync=\"dialogVisible\"\r\n        width=\"600px\"\r\n    >\r\n      <el-form\r\n          :model=\"currentBook\"\r\n          label-width=\"80px\"\r\n          :rules=\"rules\"\r\n          ref=\"bookForm\"\r\n      >\r\n        <el-form-item label=\"书名\" prop=\"name\">\r\n          <el-input v-model=\"currentBook.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"作者\" prop=\"author\">\r\n          <el-input v-model=\"currentBook.author\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"价格\" prop=\"price\">\r\n          <el-input-number\r\n              v-model=\"currentBook.price\"\r\n              :min=\"0\"\r\n              :precision=\"2\"\r\n              style=\"width: 100%\"\r\n          ></el-input-number>\r\n        </el-form-item>\r\n        <el-form-item label=\"分类\" prop=\"cid\">\r\n          <el-select\r\n              v-model=\"currentBook.cid\"\r\n              placeholder=\"请选择分类\"\r\n              style=\"width: 100%\"\r\n          >\r\n            <el-option\r\n                v-for=\"c in categories\"\r\n                :key=\"c.id\"\r\n                :label=\"c.name\"\r\n                :value=\"c.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"库存\" prop=\"stock\">\r\n          <el-input-number\r\n              v-model=\"currentBook.stock\"\r\n              :min=\"0\"\r\n              style=\"width: 100%\"\r\n          ></el-input-number>\r\n        </el-form-item>\r\n        <el-form-item label=\"封面\" prop=\"url\">\r\n          <el-upload\r\n              action=\"/api/upload\"\r\n              :show-file-list=\"false\"\r\n              :on-success=\"handleUploadSuccess\"\r\n          >\r\n            <el-button type=\"primary\">上传封面</el-button>\r\n            <div v-if=\"currentBook.url\" class=\"preview\">\r\n              <img :src=\"currentBook.url\" alt=\"封面预览\" style=\"max-width: 200px; margin-top: 10px\">\r\n            </div>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"info\">\r\n          <el-input\r\n              type=\"textarea\"\r\n              :rows=\"4\"\r\n              v-model=\"currentBook.info\"\r\n          ></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\">\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitForm\">确定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchKeyword: '',\r\n      books: [],\r\n      categories: [],\r\n      loading: false,\r\n      dialogVisible: false,\r\n      dialogTitle: '新增书籍',\r\n      currentBook: this.initBook(),\r\n      pagination: {\r\n        current: 1,\r\n        size: 10,\r\n        total: 0\r\n      },\r\n      rules: {\r\n        name: [{ required: true, message: '请输入书名', trigger: 'blur' }],\r\n        author: [{ required: true, message: '请输入作者', trigger: 'blur' }],\r\n        price: [{ required: true, message: '请输入价格', trigger: 'blur' }],\r\n        cid: [{ required: true, message: '请选择分类', trigger: 'change' }],\r\n        stock: [{ required: true, message: '请输入库存', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadBooks()\r\n    this.loadCategories()\r\n  },\r\n  methods: {\r\n    initBook() {\r\n      return {\r\n        id: null,\r\n        name: '',\r\n        author: '',\r\n        price: 0,\r\n        cid: null,\r\n        stock: 0,\r\n        url: '',\r\n        info: '',\r\n        status: 1\r\n      }\r\n    },\r\n    async loadCategories() {\r\n      const { data } = await this.$axios.get('/category/list')\r\n      this.categories = data.data\r\n    },\r\n    async loadBooks() {\r\n      this.loading = true\r\n      try {\r\n        const params = {\r\n          pageNum: this.pagination.current,\r\n          pageSize: this.pagination.size,\r\n          param: {\r\n            keyword: this.searchKeyword\r\n          }\r\n        }\r\n        const { data } = await this.$axios.post('/book/search', params)\r\n        this.books = data.data\r\n        this.pagination.total = data.total\r\n      } catch (error) {\r\n        this.$message.error('加载失败')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    handleCreate() {\r\n      this.currentBook = this.initBook()\r\n      this.dialogTitle = '新增书籍'\r\n      this.dialogVisible = true\r\n    },\r\n    handleEdit(row) {\r\n      this.currentBook = { ...row }\r\n      this.dialogTitle = '编辑书籍'\r\n      this.dialogVisible = true\r\n    },\r\n    handleUploadSuccess(res) {\r\n      this.currentBook.url = res.data.url\r\n    },\r\n    async handleStatusChange(row) {\r\n      try {\r\n        await this.$axios.post('/book/update', row)\r\n        this.$message.success('状态更新成功')\r\n      } catch (error) {\r\n        this.loadBooks()\r\n        this.$message.error('更新失败')\r\n      }\r\n    },\r\n    async handleDelete(id) {\r\n      this.$confirm('确定删除该书籍吗？', '提示', { type: 'warning' }).then(async () => {\r\n        const { data } = await this.$axios.get(`/book/del?id=${id}`)\r\n        if (data.code === 200) {\r\n          this.$message.success('删除成功')\r\n          this.loadBooks()\r\n        }\r\n      })\r\n    },\r\n    submitForm() {\r\n      this.$refs.bookForm.validate(async valid => {\r\n        if (valid) {\r\n          const api = this.currentBook.id\r\n              ? '/book/update'\r\n              : '/book/save'\r\n\r\n          const { data } = await this.$axios.post(api, this.currentBook)\r\n          if (data.code === 200) {\r\n            this.$message.success('操作成功')\r\n            this.dialogVisible = false\r\n            this.loadBooks()\r\n          }\r\n        }\r\n      })\r\n    },\r\n    handleSizeChange(size) {\r\n      this.pagination.size = size\r\n      this.loadBooks()\r\n    },\r\n    handleCurrentChange(current) {\r\n      this.pagination.current = current\r\n      this.loadBooks()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n.preview img {\r\n  border: 1px solid #eee;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}