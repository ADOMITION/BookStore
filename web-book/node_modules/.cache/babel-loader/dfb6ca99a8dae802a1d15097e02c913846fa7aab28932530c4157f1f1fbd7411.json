{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  data() {\n    return {\n      messages: [],\n      page: {\n        pageNum: 1,\n        pageSize: 10\n      },\n      total: 0\n    };\n  },\n  mounted() {\n    this.loadData();\n  },\n  methods: {\n    async loadData() {\n      const res = await this.$axios.post(this.$httpUrl + '/guestbook/admin/list', this.page);\n      if (res.data.code === 200) {\n        this.messages = res.data.data.map(item => ({\n          ...item,\n          edit: false,\n          tempReply: item.adminReply\n        }));\n        this.total = res.data.total;\n      }\n    },\n    startEdit(row) {\n      row.edit = true;\n    },\n    cancelEdit(row) {\n      row.edit = false;\n      row.tempReply = row.adminReply;\n    },\n    async saveReply(row) {\n      const res = await this.$axios.post(this.$httpUrl + '/guestbook/admin/reply', {\n        id: row.id,\n        adminReply: row.tempReply\n      });\n      if (res.data.code === 200) {\n        this.$message.success('ÂõûÂ§çÊàêÂäü');\n        row.adminReply = row.tempReply;\n        row.edit = false;\n      }\n    },\n    handlePageChange(val) {\n      this.page.pageNum = val;\n      this.loadData();\n    }\n  }\n};","map":{"version":3,"names":["data","messages","page","pageNum","pageSize","total","mounted","loadData","methods","res","$axios","post","$httpUrl","code","map","item","edit","tempReply","adminReply","startEdit","row","cancelEdit","saveReply","id","$message","success","handlePageChange","val"],"sources":["src/admin/GuestbookManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-card>\r\n      <!-- Ê†áÈ¢òÊ†è -->\r\n      <div class=\"filter-container\">\r\n        <h2 class=\"page-title\">üì¨ ÁïôË®ÄÁÆ°ÁêÜ</h2>\r\n        <div class=\"operation-btns\">\r\n          <el-button\r\n              type=\"info\"\r\n              icon=\"el-icon-refresh\"\r\n              @click=\"loadData\"\r\n          >Âà∑Êñ∞</el-button>\r\n        </div>\r\n      </div>\r\n\r\n      <el-table :data=\"messages\" style=\"width: 100%\">\r\n        <el-table-column prop=\"createTime\" label=\"Êó∂Èó¥\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"content\" label=\"ÁïôË®ÄÂÜÖÂÆπ\"></el-table-column>\r\n        <el-table-column prop=\"adminReply\" label=\"ÂõûÂ§ç\">\r\n          <template slot-scope=\"scope\">\r\n            <el-input\r\n                v-if=\"scope.row.edit\"\r\n                v-model=\"scope.row.tempReply\"\r\n                type=\"textarea\"\r\n                :rows=\"2\"\r\n            ></el-input>\r\n            <span v-else>{{ scope.row.adminReply }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"Êìç‰Ωú\" width=\"180\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button\r\n                v-if=\"!scope.row.edit\"\r\n                type=\"text\"\r\n                @click=\"startEdit(scope.row)\"\r\n            >ÂõûÂ§ç</el-button>\r\n            <el-button\r\n                v-if=\"scope.row.edit\"\r\n                type=\"text\"\r\n                @click=\"saveReply(scope.row)\"\r\n            >‰øùÂ≠ò</el-button>\r\n            <el-button\r\n                v-if=\"scope.row.edit\"\r\n                type=\"text\"\r\n                @click=\"cancelEdit(scope.row)\"\r\n            >ÂèñÊ∂à</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <el-pagination\r\n          @current-change=\"handlePageChange\"\r\n          :current-page=\"page.pageNum\"\r\n          :page-size=\"page.pageSize\"\r\n          :total=\"total\"\r\n          layout=\"prev, pager, next\"\r\n      ></el-pagination>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      messages: [],\r\n      page: { pageNum: 1, pageSize: 10 },\r\n      total: 0\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadData()\r\n  },\r\n  methods: {\r\n    async loadData() {\r\n      const res = await this.$axios.post(this.$httpUrl+'/guestbook/admin/list', this.page)\r\n      if(res.data.code === 200) {\r\n        this.messages = res.data.data.map(item => ({\r\n          ...item,\r\n          edit: false,\r\n          tempReply: item.adminReply\r\n        }))\r\n        this.total = res.data.total\r\n      }\r\n    },\r\n    startEdit(row) {\r\n      row.edit = true\r\n    },\r\n    cancelEdit(row) {\r\n      row.edit = false\r\n      row.tempReply = row.adminReply\r\n    },\r\n    async saveReply(row) {\r\n      const res = await this.$axios.post(this.$httpUrl+'/guestbook/admin/reply', {\r\n        id: row.id,\r\n        adminReply: row.tempReply\r\n      })\r\n      if(res.data.code === 200) {\r\n        this.$message.success('ÂõûÂ§çÊàêÂäü')\r\n        row.adminReply = row.tempReply\r\n        row.edit = false\r\n      }\r\n    },\r\n    handlePageChange(val) {\r\n      this.page.pageNum = val\r\n      this.loadData()\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";;AA8DA;EACAA,KAAA;IACA;MACAC,QAAA;MACAC,IAAA;QAAAC,OAAA;QAAAC,QAAA;MAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA;EACA;EACAC,OAAA;IACA,MAAAD,SAAA;MACA,MAAAE,GAAA,cAAAC,MAAA,CAAAC,IAAA,MAAAC,QAAA,iCAAAV,IAAA;MACA,IAAAO,GAAA,CAAAT,IAAA,CAAAa,IAAA;QACA,KAAAZ,QAAA,GAAAQ,GAAA,CAAAT,IAAA,CAAAA,IAAA,CAAAc,GAAA,CAAAC,IAAA;UACA,GAAAA,IAAA;UACAC,IAAA;UACAC,SAAA,EAAAF,IAAA,CAAAG;QACA;QACA,KAAAb,KAAA,GAAAI,GAAA,CAAAT,IAAA,CAAAK,KAAA;MACA;IACA;IACAc,UAAAC,GAAA;MACAA,GAAA,CAAAJ,IAAA;IACA;IACAK,WAAAD,GAAA;MACAA,GAAA,CAAAJ,IAAA;MACAI,GAAA,CAAAH,SAAA,GAAAG,GAAA,CAAAF,UAAA;IACA;IACA,MAAAI,UAAAF,GAAA;MACA,MAAAX,GAAA,cAAAC,MAAA,CAAAC,IAAA,MAAAC,QAAA;QACAW,EAAA,EAAAH,GAAA,CAAAG,EAAA;QACAL,UAAA,EAAAE,GAAA,CAAAH;MACA;MACA,IAAAR,GAAA,CAAAT,IAAA,CAAAa,IAAA;QACA,KAAAW,QAAA,CAAAC,OAAA;QACAL,GAAA,CAAAF,UAAA,GAAAE,GAAA,CAAAH,SAAA;QACAG,GAAA,CAAAJ,IAAA;MACA;IACA;IACAU,iBAAAC,GAAA;MACA,KAAAzB,IAAA,CAAAC,OAAA,GAAAwB,GAAA;MACA,KAAApB,QAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}